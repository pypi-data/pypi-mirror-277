[tool.poetry]
name = "epubcheck"
version = "5.1.0"
description = "Python epubcheck wrapper"
authors = ["Titusz Pan <tp@py7.de>"]
license = "BSD"
readme = "README.md"
repository = "https://github.com/titusz/epubcheck/"
keywords = ['EPUB', 'validation', 'epubcheck', 'ebooks', 'QA', 'IDPF']

classifiers = [
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: BSD License',
        'Operating System :: Unix',
        'Operating System :: POSIX',
        'Operating System :: Microsoft :: Windows',
        'Programming Language :: Python',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
        'Programming Language :: Python :: Implementation :: CPython',
        'Programming Language :: Python :: Implementation :: PyPy',
]

[tool.poetry.scripts]
epubcheck = 'epubcheck.cli:main'

[tool.poetry.dependencies]
python = ">=3.8"
tablib = "*"
xlwt = "*"
xlrd = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
coverage = "*"
pytest-cov = "*"

[tool.poetry.group.dev.dependencies]
poethepoet = "*"
ruff = "*"
mdformat-gfm = "*"

[tool.ruff]
line-length = 100

[tool.ruff.format]
line-ending = "lf"

[tool.poe.tasks]
format-code = { cmd = "poetry run ruff format", help = "Code style formating with ruff" }
format-markdown = { cmd = "mdformat --wrap 100 --end-of-line lf .", help = "Markdown formating with mdformat" }
test = { cmd = "poetry run pytest --cov=epubcheck --cov-fail-under=100 --cov-report=term-missing", help = "Run tests with coverage" }
all = ["format-code", "format-markdown", "test"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
