[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

##############################################################################
#################################  PROJECT  ##################################
##############################################################################
[project]
name = "ssec"
version = "4.0.1"
description = "Synchronous and asynchronous library for server-sent events."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "J. Baudisch", email = "justin.baudisch@hsbi.de" }]
maintainers = [{ name = "J. Baudisch", email = "justin.baudisch@hsbi.de" }]
keywords = [
    "Server-sent events",
    "Network",
    "Synchronous",
    "Asynchronous"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed"
]
dependencies = [
    "httpx~=0.27.0",
]

[project.urls]
Repository = "https://github.com/sharly-project/ssec"

##############################################################################
##################################  TOOLS  ###################################
##############################################################################
[tool.rye]
managed = true
dev-dependencies = [
    # Linting & Formatting
    "ruff~=0.4.7",
    "mypy~=1.10.0",

    # Documentation
    "sphinx~=7.3.7",
    "furo~=2024.5.6",

    # Testing
    "pytest~=8.2.1",
    "pytest-asyncio~=0.23.7",
]

[tool.ruff]
cache-dir = ".cache/ruff"
extend-exclude = [".cache", "pyproject.toml"]
preview = true
show-fixes = true
src = ["src", "tests"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",      # pyflakes
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "C90",    # mccabe
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "UP",     # pyupgrade
    "YTT",    # flake8-2020
    "ANN",    # flake8-annotations
    "ASYNC",  # flake8-async
    # "TRIO",   # flake8-trio
    "S",      # flake8-bandit
    "BLE",    # flake8-blind-except
    "FBT",    # flake8-boolean-trap
    "B",      # flake8-bugbear
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    # "CPY",    # flake8-copyright
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    # "DJ",     # flake8-django
    "EM",     # flake8-errmsg
    "EXE",    # flake8-executable
    "FA",     # flake8-future-annotations
    "ISC",    # flake8-implicit-str-concat
    # "ICN",    # flake8-import-conventions
    "LOG",    # flake8-logging
    # "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "SLOT",   # flake8-slots
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "TCH",    # flake8-type-checking
    # "INT",    # flake8-gettext
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "TD",     # flake8-todos
    "FIX",    # flake8-fixme
    "ERA",    # eradicate
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # pylint
    "TRY",    # tryceratops
    "FLY",    # flynt
    "NPY",    # numpy-specific
    # "AIR",    # airflow
    "PERF",   # perflint
    "FURB",   # refurb
    "RUF"     # ruff-specific-rules
]
ignore = [
    "ANN101",   # allow missing type annotation for `self` in method
    "ANN102",   # allow missing type annotation for `cls` in method
    "D105",     # allow undocumented magic method
    "TD003",    # allow missing issue link on TODO's
    "RSE102",   # allow unnecessary parentheses on raised exceptions (bug in ruff)
    "PLR1702",  # allow too many nested blocks
    "PLR0913",  # allow too many arguments
    "PLR0912",  # allow too many branches
    "C901",     # allow complex structure
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "F401"      # allow unused imports
]
"examples/*" = [
    "D100",     # allow undocumented public modules
    "INP001",   # allow implicit namespace package
    "D103",     # allow undocumented public function
    "T201"      # allow print statements
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
cache_dir = ".cache/mypy"
strict = true
