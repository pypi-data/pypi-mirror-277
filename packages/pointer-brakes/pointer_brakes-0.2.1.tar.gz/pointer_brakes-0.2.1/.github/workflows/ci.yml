name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

env:
  coverageDir: cover
  ccTestReporterUrl: https://codeclimate.com/downloads/test-reporter/test-reporter-0.11.1-linux-amd64
  srcDir: src/pointer_brakes
  testDir: tests

jobs:
  check-deps:
    name: Ensure dependency lockfiles are in sync
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ vars.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Run update-deps script
        run: hatch run update-deps

      - name: Check for changes to lockfiles
        run: >
          ! git status --short --untracked-files=all | grep -E 'requirements.*\.txt'

  static-analysis:
    name: Do linting and type checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ vars.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Run linting
        run: hatch fmt --check

      - name: Run type checking
        run: hatch run types:check

  start-coverage:
    name: Initialize coverage reporting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Notify Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L ${{ env.ccTestReporterUrl }} > cc-test-reporter
          chmod +x cc-test-reporter

          ./cc-test-reporter before-build

  test:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    needs: [start-coverage]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Run tests and coverage
        env:
          COVERAGE_FILE: ${{ env.coverageDir }}/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}
        run: hatch run test-cov

      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage.${{ runner.os }}-py${{ matrix.python-version }}
          path: ${{ env.coverageDir }}

  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      src: ${{ steps.filter.outputs.src }}
      tests: ${{ steps.filter.outputs.tests }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src: ${{ env.srcDir }}/**
            test: ${{ env.testDir }}/**

  mutation-testing-report:
    name: Mutation testing report
    needs: [changes]
    if: needs.changes.outputs.src == 'true' || needs.changes.outputs.tests == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      pull-requests: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Prepare environment
        run: |
          hatch build
          pip install dist/*.whl

      - uses: Century-ss/python-mutation-report@v2
        with:
          lock-file-path: "requirements.txt"
          src-directory: "src/pointer_brakes"
          test-directory: "tests"
          python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}

  finish-coverage:
    name: Finish coverage reporting
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ vars.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ vars.DEFAULT_PYTHON_VERSION }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.*
          merge-multiple: true

      - name: Send reports to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L ${{ env.ccTestReporterUrl }} > cc-test-reporter
          chmod +x cc-test-reporter

          hatch run cov-xml
          ./cc-test-reporter after-build
