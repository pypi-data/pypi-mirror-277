Metadata-Version: 2.1
Name: aestetik
Version: 0.0.1
Summary: AESTETIK: AutoEncoder for Spatial Transcriptomics Expression with Topology and Image Knowledge
Home-page: https://github.com/ratschlab/aestetik
Author: KalinNonchev
Author-email: boo@foo.com
License: MIT License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: torch ==2.0.0
Requires-Dist: numpy ==1.23.5
Requires-Dist: pandas ==1.5.3
Requires-Dist: scipy ==1.11.4
Requires-Dist: anndata ==0.8.0
Requires-Dist: scanpy ==1.9.3
Requires-Dist: squidpy ==1.2.2
Requires-Dist: matplotlib ==3.8.2
Requires-Dist: torchvision ==0.15.1
Requires-Dist: scikit-learn ==1.2.2
Requires-Dist: numba ==0.56.4
Requires-Dist: llvmlite ==0.39.1
Requires-Dist: dask-image ==2022.9.0
Requires-Dist: plotnine

# AESTETIK: AutoEncoder for Spatial Transcriptomics Expression with Topology and Image Knowledge

We introduce AESTETIK, a convolutional autoencoder model. It jointly integrates transcriptomics and morphology information, on a spot level, and topology, on a neighborhood level, to learn accurate spot representations that capture biological complexity.

![aestetik](/figs/aestetik.png)

**Fig. 1 AESTETIK integrates spatial, transcriptomics, and morphology information to learn accurate spot representations.**
**A**: Spatial transcriptomics enables in-depth molecular characterization of samples on a morphology and RNA level while preserving spatial location. **B**: Workflow of AESTETIK. Initially, the transcriptomics and morphology spot representations are preprocessed. Next, a dimensionality reduction technique (e.g., PCA) is applied. Subsequently, the processed spot representations are clustered separately to acquire labels required for the multi-triplet loss. Afterwards, the modality-specific representations are fused through concatenation and the grid per spot is built. This is used as an input for the autoencoder. Lastly, the spatial-, transcriptomics-, and morphology-informed spot representations are obtained and used for downstream tasks such as clustering, morphology analysis, etc.

## Setup

We can install aestetik through pip.

```
pip install aestetik
```

##### NB: Please ensure you have installed [pyvips](https://github.com/libvips/pyvips) depending on your machine's requirements. We suggest installing pyvips through conda:
```
conda install conda-forge::pyvips
```

## Getting Started

Please take a look at our [example](example/gettingStartedWithAESTETIK.ipynb) to get started with AESTETIK.


## Reference

tbd

The code for the reproducibility of the paper results can be found [here](https://github.com/ratschlab/st-rep).
