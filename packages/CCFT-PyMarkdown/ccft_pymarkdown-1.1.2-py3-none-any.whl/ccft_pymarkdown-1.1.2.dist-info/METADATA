Metadata-Version: 2.1
Name: CCFT-PyMarkdown
Version: 1.1.2
Summary: A Python wrapper around jackdewinter's PyMarkdown linter to suppress errors, caused by custom-formatted tables in Markdown files
Home-page: https://github.com/CarrotManMatt/ccft-pymarkdown.git
License: Apache-2.0
Keywords: markdown,linter,static analysis
Author: Matt Norton
Author-email: matt@carrotmanmatt.com
Requires-Python: >=3.12,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Quality Assurance
Classifier: Topic :: Text Processing :: Markup :: Markdown
Classifier: Typing :: Typed
Requires-Dist: gitpython (>=3.1,<4.0)
Requires-Dist: pymarkdownlnt (>=0.9,<0.10)
Requires-Dist: setuptools (>=70.0,<71.0)
Project-URL: Repository, https://github.com/CarrotManMatt/ccft-pymarkdown.git
Description-Content-Type: text/plain

= CCFT-PyMarkdown
Matthew Norton <matt@carrotmanmatt.com>
v1.0, 02/05/2024

ifndef::env-idea[]
include::.asciidoctorconfig[]
endif::[]

A Python wrapper around {url-pymarkdown}[jackdewinter's PyMarkdown linter] to suppress {labelled-url-pymarkdown} errors, caused by custom-formatted tables in {labelled-url-wiki-markdown} files.

image:https://img.shields.io/badge/dynamic/toml?url=https%3A%2F%2Fraw.githubusercontent.com%2FCarrotManMatt%2Fccft-pymarkdown%2Fmain%2Fpyproject.toml&query=%24.tool.poetry.version&label=CCFT-PyMarkdown[Current Version,link={url-project-repo}]
image:https://img.shields.io/pypi/v/ccft-pymarkdown[PyPI - Version,link={url-project-pypi}]
image:https://img.shields.io/badge/Python-3.12-blue?&logo=Python&logoColor=white[Python Version,link={url-python-312}]
image:https://img.shields.io/badge/dynamic/toml?url=https%3A%2F%2Fraw.githubusercontent.com%2FCarrotManMatt%2Fccft-pymarkdown%2Fmain%2Fpoetry.lock&query=%24.package%5B%3F%28%40.name%3D%3D%27pymarkdownlnt%27%29%5D.version&logo=Markdown&label=PyMarkdown[PyMarkdown Version,link={url-pymarkdown}]
image:https://github.com/CarrotManMatt/ccft-pymarkdown/actions/workflows/tests.yaml/badge.svg[Tests Status,link={url-project-repo}/actions/workflows/tests.yaml]
image:https://img.shields.io/badge/mypy-checked-%232EBB4E&label=mypy[mypy Status,link={url-mypy}]
image:https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json[Ruff,link={url-ruff}]
image:https://results.pre-commit.ci/badge/github/CarrotManMatt/ccft-pymarkdown/main.svg[pre-commit.ci Status,link=https://results.pre-commit.ci/latest/github/CarrotManMatt/ccft-pymarkdown/main]
image:https://img.shields.io/badge/validated-brightgreen?logo=asciidoctor&label=Asciidoctor[Asciidoctor Status,link={url-asciidoc-asciidoctor}]
image:https://img.shields.io/badge/validated-brightgreen?logo=yaml&label=yamllint[yamllint Status,link={url-yamllint}]


When running {labelled-url-pymarkdown} it may incorrectly flag errors inside a table that has correct formatting.
Using this wrapper, the errors will be suppressed, by temporarily cleaning any custom-formatted tables.

== Usage

If you require sending additional arguments to the `+pymarkdown+` command you must <<manually-cleaning-custom-formatted-tables,manually clean>> any custom-formatted tables and then <<manually-restoring-custom-formatted-tables,manually restore>> the {labelled-url-wiki-markdown} files.

=== Scanning All Files After Cleaning Custom-Formatted Tables

To perform linting using {labelled-url-pymarkdown}, after cleaning custom-formatted tables within any {labelled-url-wiki-markdown} files, use the `+scan-all+` action:

[source,console]
$ ccft-pymarkdown scan-all

[#manually-cleaning-custom-formatted-tables]
=== Manually Cleaning Custom-Formatted Tables

To manually clean custom-formatted-tables within any {labelled-url-wiki-markdown} files without running {labelled-url-pymarkdown}, use the `+clean+` action:

[source,console]
$ ccft-pymarkdown clean

[#manually-restoring-custom-formatted-tables]
=== Manually Restoring {labelled-url-wiki-markdown} Files

To manually restore any {labelled-url-wiki-markdown} files without running {labelled-url-pymarkdown}, use the `+restore+` action:

[source,console]
$ ccft-pymarkdown restore

