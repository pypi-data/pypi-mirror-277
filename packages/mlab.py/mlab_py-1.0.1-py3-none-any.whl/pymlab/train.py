"""
Do not edit this file
This is the file that will be used to train your model
"""
import os
import json
import requests

class TrainResults:
    """Results of training."""
    def __init__(self, pretrained_model: str, metrics: dict[str, float], files: []):
        self.pretrained_model = pretrained_model
        self.metrics = metrics
        self.files = files


async def train(
    main, # this is the function that will be called to train the model
    result_id: str,
    api_url: str,
    **kwargs,
) -> TrainResults:
    """
    Train a model
    This function will provide the dataset path, parameters and result_id
    and will return the results of training.
    """
    try:
        metrics, files, pretrained_model = await main(result_id=result_id, **kwargs)

        files = {}

        for file in files:
            filename = file.split("/")[-1]
            files[filename] = (filename, open(file, 'rb'))

        # Stringify metrics
        metrics = json.dumps(metrics)
        data = {
            "result_id": result_id,
            "metrics": metrics,
            "pretrained_model": pretrained_model,
        }

        response = requests.post(api_url, data=data, files=files,timeout=120)

        if response.status_code == 200:
            for file in files:
                os.remove(file)
        else:
            raise requests.HTTPError(f"Error uploading results. Status code: {response.status_code}, error: {response.text}")

    except Exception as e:
        if not os.path.exists(f"{result_id}/error.txt"):
            os.mkdir(result_id)
            with open(f"{result_id}/error.txt", "w", encoding="utf-8") as f:
                f.write(str(e))
        else:
            with open(f"{result_id}/error.txt", "a", encoding="utf-8") as f:
                f.write(str(e))
        error_file = open(f"{result_id}/error.txt", "rb")
        req_files = {
            "error.txt": error_file,
        }
        requests.post(api_url+f"?error={True}", data={"result_id": result_id, "error": str(e)}, files=req_files, timeout=120)
