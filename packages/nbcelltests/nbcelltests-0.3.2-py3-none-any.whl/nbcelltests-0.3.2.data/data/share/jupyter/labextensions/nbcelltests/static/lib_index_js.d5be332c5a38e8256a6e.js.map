{"version":3,"file":"lib_index_js.d5be332c5a38e8256a6e.js","mappings":"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","sources":["webpack://nbcelltests/./src/activate.ts","webpack://nbcelltests/./src/index.ts","webpack://nbcelltests/./src/run.ts","webpack://nbcelltests/./src/tool.ts","webpack://nbcelltests/./src/utils.ts","webpack://nbcelltests/./src/widget.ts"],"sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { JupyterFrontEnd } from \"@jupyterlab/application\";\nimport { runCellLints, runCellTests } from \"./run\";\nimport { CelltestsTool } from \"./tool\";\n// tslint:disable-next-line:max-line-length\nimport { CELLTESTS_ID, CELLTESTS_CATEGORY, CELLTESTS_LINT_CAPTION, CELLTESTS_LINT_ID, CELLTESTS_TEST_CAPTION, CELLTESTS_TEST_ID, isEnabled } from \"./utils\";\nimport { IDocumentManager } from \"@jupyterlab/docmanager\";\nimport { ICommandPalette } from \"@jupyterlab/apputils\";\nimport { INotebookTools, INotebookTracker } from \"@jupyterlab/notebook\";\nimport { IEditorServices } from \"@jupyterlab/codeeditor\";\n\nexport function activate(app: JupyterFrontEnd, docManager: IDocumentManager, palette: ICommandPalette, tracker: INotebookTracker, cellTools: INotebookTools, editorServices: IEditorServices) {\n  /* Add to cell tools sidebar */\n  const testsTool = new CelltestsTool(app, tracker, cellTools, editorServices);\n\n  // Adds a section to notebookTools.\n  cellTools.addSection({\n    sectionName: CELLTESTS_ID,\n    rank: 1,\n    label: CELLTESTS_CATEGORY,\n  });\n\n  cellTools.addItem({ tool: testsTool, rank: 1.9, section: CELLTESTS_ID });\n\n  /* Add to commands to sidebar */\n  palette.addItem({ command: CELLTESTS_TEST_ID, category: CELLTESTS_CATEGORY });\n  palette.addItem({ command: CELLTESTS_LINT_ID, category: CELLTESTS_CATEGORY });\n\n  app.commands.addCommand(CELLTESTS_TEST_ID, {\n    caption: CELLTESTS_TEST_CAPTION,\n    execute: async () => {\n      await runCellTests(app, docManager);\n    },\n    isEnabled: isEnabled(app, docManager),\n    label: CELLTESTS_TEST_CAPTION,\n  });\n\n  app.commands.addCommand(CELLTESTS_LINT_ID, {\n    caption: CELLTESTS_LINT_CAPTION,\n    execute: async () => {\n      await runCellLints(app, docManager);\n    },\n    isEnabled: isEnabled(app, docManager),\n    label: CELLTESTS_LINT_CAPTION,\n  });\n}\n","/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { ICommandPalette } from \"@jupyterlab/apputils\";\nimport { IDocumentManager } from \"@jupyterlab/docmanager\";\nimport { ILauncher } from \"@jupyterlab/launcher\";\nimport { INotebookTools, INotebookTracker } from \"@jupyterlab/notebook\";\nimport { IEditorServices } from \"@jupyterlab/codeeditor\";\n\nimport \"../style/index.css\";\nimport { activate } from \"./activate\";\nimport { CELLTESTS_ID } from \"./utils\";\nimport { JupyterFrontEndPlugin } from \"@jupyterlab/application\";\n\nconst extension: JupyterFrontEndPlugin<void> = {\n  activate,\n  autoStart: true,\n  id: CELLTESTS_ID,\n  optional: [ILauncher],\n  requires: [IDocumentManager, ICommandPalette, INotebookTracker, INotebookTools, IEditorServices],\n};\n\nexport default extension;\nexport { activate as _activate };\n","/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { Dialog, showDialog } from \"@jupyterlab/apputils\";\nimport { Widget } from \"@lumino/widgets\";\n\nimport { ServerConnection } from \"@jupyterlab/services\";\nimport { JupyterFrontEnd } from \"@jupyterlab/application\";\nimport { IDocumentManager } from \"@jupyterlab/docmanager\";\n\nexport async function runCellTests(app: JupyterFrontEnd, docManager: IDocumentManager) {\n  const result = await showDialog({\n    buttons: [Dialog.cancelButton(), Dialog.okButton({ label: \"Ok\" })],\n    title: \"Run tests?\",\n  });\n  if (result.button.label === \"Cancel\") {\n    return;\n  }\n  if (!app.shell.currentWidget) {\n    return;\n  }\n  const context = docManager.contextForWidget(app.shell.currentWidget);\n\n  if (context === undefined) {\n    return;\n  }\n\n  const path = context.path;\n  const model = context.model.toJSON();\n\n  const settings = ServerConnection.makeSettings();\n  const res = await ServerConnection.makeRequest(`${settings.baseUrl}celltests/test/run`, { method: \"post\", body: JSON.stringify({ path, model }) }, settings);\n\n  if (res.ok) {\n    const iframe = document.createElement(\"iframe\");\n    const html_data: string = (await res.json()).test;\n    iframe.onload = () => {\n      // write iframe content\n      iframe.contentWindow?.document.write(html_data);\n    };\n    const body = new Widget({ node: iframe });\n\n    const dialog = new Dialog({\n      body,\n      buttons: [Dialog.okButton({ label: \"Ok\" })],\n      title: \"Tests run!\",\n    });\n\n    (dialog.node.lastChild as HTMLDivElement).style.maxHeight = \"1600px\";\n    (dialog.node.lastChild as HTMLDivElement).style.maxWidth = \"2000px\";\n    (dialog.node.lastChild as HTMLDivElement).style.width = \"900px\";\n    (dialog.node.lastChild as HTMLDivElement).style.height = \"900px\";\n\n    await dialog.launch();\n  } else {\n    await showDialog({\n      body: \"Check the Jupyter logs for the exception.\",\n      buttons: [Dialog.okButton({ label: \"Ok\" })],\n      title: \"Something went wrong!\",\n    });\n  }\n}\n\nexport async function runCellLints(app: JupyterFrontEnd, docManager: IDocumentManager) {\n  const result = await showDialog({\n    buttons: [Dialog.cancelButton(), Dialog.okButton({ label: \"Ok\" })],\n    title: \"Run Lint?\",\n  });\n\n  if (result.button.label === \"Cancel\") {\n    return;\n  }\n  if (!app.shell.currentWidget) {\n    return;\n  }\n  const context = docManager.contextForWidget(app.shell.currentWidget);\n  if (context === undefined) {\n    return;\n  }\n\n  const path = context.path;\n  const model = context.model.toJSON();\n\n  const settings = ServerConnection.makeSettings();\n  const res = await ServerConnection.makeRequest(`${settings.baseUrl}celltests/lint/run`, { method: \"post\", body: JSON.stringify({ path, model }) }, settings);\n\n  if (res.ok) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = (await res.json()).lint;\n    const body = new Widget({ node: div });\n\n    const dialog = new Dialog({\n      body,\n      buttons: [Dialog.okButton({ label: \"Ok\" })],\n      title: \"Lints run!\",\n    });\n\n    (dialog.node.lastChild as HTMLDivElement).style.maxHeight = \"1600px\";\n    (dialog.node.lastChild as HTMLDivElement).style.maxWidth = \"2000px\";\n    (dialog.node.lastChild as HTMLDivElement).style.width = \"600px\";\n    (dialog.node.lastChild as HTMLDivElement).style.height = \"800px\";\n\n    await dialog.launch();\n  } else {\n    await showDialog({\n      body: \"Check the Jupyter logs for the exception.\",\n      buttons: [Dialog.okButton({ label: \"Ok\" })],\n      title: \"Something went wrong!\",\n    });\n  }\n}\n","/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { PanelLayout, Widget } from \"@lumino/widgets\";\n\nimport { INotebookTools, INotebookTracker, NotebookTools } from \"@jupyterlab/notebook\";\nimport { ObservableJSON } from \"@jupyterlab/observables\";\n\nimport { CELLTEST_TOOL_CLASS } from \"./utils\";\nimport { CelltestsWidget } from \"./widget\";\nimport { JupyterFrontEnd } from \"@jupyterlab/application\";\nimport { IEditorServices } from \"@jupyterlab/codeeditor\";\n\nexport class CelltestsTool extends NotebookTools.Tool {\n  notebookTracker: INotebookTracker;\n\n  cellTools: INotebookTools;\n\n  private widget: CelltestsWidget;\n\n  constructor(app: JupyterFrontEnd, notebook_Tracker: INotebookTracker, cellTools: INotebookTools, editorServices: IEditorServices) {\n    super();\n    this.notebookTracker = notebook_Tracker;\n    this.cellTools = cellTools;\n    this.layout = new PanelLayout();\n\n    /* Section Header */\n    const label = document.createElement(\"label\");\n    label.textContent = \"Celltests\";\n    (this.layout as PanelLayout).addWidget(new Widget({ node: label }));\n\n    this.addClass(CELLTEST_TOOL_CLASS);\n    this.widget = new CelltestsWidget(editorServices);\n    this.widget.notebookTracker = notebook_Tracker;\n\n    (this.layout as PanelLayout).addWidget(this.widget);\n  }\n\n  /**\n   * Handle a change to the active cell.\n   */\n  protected onActiveCellChanged() {\n    if (this.cellTools.activeCell) {\n      this.widget.currentActiveCell = this.cellTools.activeCell;\n      this.widget.loadTestsForActiveCell();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  protected onAfterShow() {}\n\n  protected onAfterAttach() {\n    if (this.notebookTracker.currentWidget === null) {\n      return;\n    }\n\n    void this.notebookTracker.currentWidget.context.ready.then(() => {\n      this.widget.loadTestsForActiveCell();\n      this.widget.loadRulesForCurrentNotebook();\n    });\n    this.notebookTracker.currentChanged.connect(() => {\n      this.widget.loadTestsForActiveCell();\n      this.widget.loadRulesForCurrentNotebook();\n    });\n    this.notebookTracker.currentWidget.model?.cells.changed.connect(() => {\n      this.widget.loadTestsForActiveCell();\n      this.widget.loadRulesForCurrentNotebook();\n    });\n  }\n\n  protected onMetadataChanged(msg: ObservableJSON.ChangeMessage): void {\n    this.widget.loadTestsForActiveCell();\n    this.widget.loadRulesForCurrentNotebook();\n  }\n}\n","import { JupyterFrontEnd } from \"@jupyterlab/application\";\nimport { IDocumentManager } from \"@jupyterlab/docmanager\";\n\n/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nexport const CELLTESTS_ID = \"nbcelltests\";\n\nexport const CELLTESTS_CATEGORY = \"Cell Tests\";\n\nexport const CELLTESTS_TEST_ID = \"nbcelltests:test\";\n\nexport const CELLTESTS_LINT_ID = \"nbcelltests:lint\";\n\nexport const CELLTESTS_TEST_CAPTION = \"Run Celltests\";\n\nexport const CELLTESTS_LINT_CAPTION = \"Run Lint\";\n\nexport const CELLTEST_TOOL_CLASS = \"CelltestTool\";\n\nexport const CELLTEST_TOOL_CONTROLS_CLASS = \"CelltestsControls\";\n\nexport const CELLTEST_TOOL_RULES_CLASS = \"CelltestsRules\";\n\nexport const CELLTEST_TOOL_EDITOR_CLASS = \"CelltestsEditor\";\n\nexport const CELLTEST_RULES = [\n  // TODO fetch from server\n  {\n    key: \"lines_per_cell\",\n    label: \"Lines per Cell\",\n    min: 1,\n    step: 1,\n    value: 10,\n  },\n  {\n    key: \"cells_per_notebook\",\n    label: \"Cells per Notebook\",\n    min: 1,\n    step: 1,\n    value: 20,\n  },\n  {\n    key: \"function_definitions\",\n    label: \"Function definitions\",\n    min: 0,\n    step: 1,\n    value: 10,\n  },\n  {\n    key: \"class_definitions\",\n    label: \"Class definitions\",\n    min: 0,\n    step: 1,\n    value: 5,\n  },\n  {\n    key: \"cell_coverage\",\n    label: \"Cell test coverage (%)\",\n    max: 100,\n    min: 1,\n    step: 1,\n    value: 50,\n  },\n];\n\nexport function isEnabled(app: JupyterFrontEnd, docManager: IDocumentManager) {\n  return () => !!(app.shell.currentWidget && docManager.contextForWidget(app.shell.currentWidget) && docManager.contextForWidget(app.shell.currentWidget)?.model);\n}\n","/******************************************************************************\n *\n * Copyright (c) 2019, the nbcelltest authors.\n *\n * This file is part of the nbcelltest library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n/* eslint-disable max-classes-per-file */\n/* eslint-disable id-blacklist */\nimport { BoxPanel, PanelLayout, Widget } from \"@lumino/widgets\";\n\nimport { Cell, CodeCellModel } from \"@jupyterlab/cells\";\n\nimport { CodeEditorWrapper, IEditorServices } from \"@jupyterlab/codeeditor\";\n\nimport circleSvg from \"../style/circle.svg\";\nimport { CELLTEST_RULES, CELLTEST_TOOL_CONTROLS_CLASS, CELLTEST_TOOL_EDITOR_CLASS, CELLTEST_TOOL_RULES_CLASS } from \"./utils\";\nimport { INotebookTracker } from \"@jupyterlab/notebook\";\n\nconst DEFAULT_TESTS = ['# Use %cell to mark where the cell should be inserted, or add a line comment \"# no %cell\" to deliberately skip the cell\\n', \"%cell\\n\"];\n\n/**\n * Widget responsible for holding test controls\n *\n * @class      ControlsWidget (name)\n */\nclass ControlsWidget extends BoxPanel {\n  label: HTMLLabelElement;\n\n  svglabel: HTMLLabelElement;\n\n  svg: HTMLElement;\n\n  constructor() {\n    super({ direction: \"top-to-bottom\" });\n\n    /* Section Header */\n    this.label = document.createElement(\"label\");\n    this.label.textContent = \"Tests\";\n\n    this.svglabel = document.createElement(\"label\");\n\n    this.svg = document.createElement(\"svg\");\n    this.svg.innerHTML = circleSvg;\n    this.svg = (this.svg.firstChild as HTMLElement);\n\n    const div1 = document.createElement(\"div\");\n    div1.appendChild(this.label);\n\n    const div2 = document.createElement(\"div\");\n    div1.appendChild(div2);\n\n    div2.appendChild(this.svglabel);\n    div2.appendChild(this.svg);\n\n    this.node.appendChild(div1);\n    this.node.classList.add(CELLTEST_TOOL_CONTROLS_CLASS);\n\n    /* Add button */\n    const div3 = document.createElement(\"div\");\n    const add = document.createElement(\"button\");\n    add.textContent = \"Add\";\n    add.onclick = () => {\n      this.add();\n    };\n\n    /* Save button */\n    const save = document.createElement(\"button\");\n    save.textContent = \"Save\";\n    save.onclick = () => {\n      this.save();\n    };\n\n    /* Clear button */\n    const clear = document.createElement(\"button\");\n    clear.textContent = \"Clear\";\n    clear.onclick = () => {\n      this.clear();\n    };\n\n    /* add to container */\n    div3.appendChild(add);\n    div3.appendChild(save);\n    div3.appendChild(clear);\n    this.node.appendChild(div3);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  add = () => {};\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  save = () => {};\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  clear = () => {};\n}\n\n/**\n * Widget responsible for holding test controls\n *\n * @class      ControlsWidget (name)\n */\nclass RulesWidget extends BoxPanel {\n  label: HTMLLabelElement;\n  lines_per_cell: HTMLDivElement;\n  cells_per_notebook: HTMLDivElement;\n  function_definitions: HTMLDivElement;\n  class_definitions: HTMLDivElement;\n  cell_coverage: HTMLDivElement;\n\n  constructor() {\n    super({ direction: \"top-to-bottom\" });\n\n    /* Section Header */\n    this.label = document.createElement(\"label\");\n    this.label.textContent = \"Lint Rules\";\n\n    this.node.appendChild(this.label);\n    this.node.classList.add(CELLTEST_TOOL_RULES_CLASS);\n\n    /* Add button */\n    const div = document.createElement(\"div\");\n\n    [].slice.call(CELLTEST_RULES).forEach((val: {[key: string]: string}) => {\n      const row = document.createElement(\"div\");\n      const span = document.createElement(\"span\");\n      span.textContent = val.label;\n\n      const chkbx = document.createElement(\"input\");\n      chkbx.type = \"checkbox\";\n      chkbx.name = val.key;\n\n      const number = document.createElement(\"input\");\n      number.type = \"number\";\n      number.name = val.key;\n\n      chkbx.onchange = () => {\n        number.disabled = !chkbx.checked;\n        number.value = number.disabled ? \"\" : val.value;\n        this.save();\n      };\n\n      number.onchange = () => {\n        this.save();\n      };\n\n      if (val.min !== undefined) {\n        number.min = val.min;\n      }\n      if (val.max !== undefined) {\n        number.max = val.max;\n      }\n      if (val.step !== undefined) {\n        number.step = val.step;\n      }\n\n      row.appendChild(span);\n      row.appendChild(chkbx);\n      row.appendChild(number);\n      this.setByKey(val.key, row);\n      div.appendChild(row);\n    });\n    this.node.appendChild(div);\n  }\n\n  getByKey(key: string) {\n    switch (key) {\n      case \"lines_per_cell\": {\n        return this.lines_per_cell;\n      }\n      case \"cells_per_notebook\": {\n        return this.cells_per_notebook;\n      }\n      case \"function_definitions\": {\n        return this.function_definitions;\n      }\n      case \"class_definitions\": {\n        return this.class_definitions;\n      }\n      case \"cell_coverage\": {\n        return this.cell_coverage;\n      }\n      default:\n        return undefined;\n    }\n  }\n\n  setByKey(key: string, elem: HTMLDivElement) {\n    switch (key) {\n      case \"lines_per_cell\": {\n        this.lines_per_cell = elem;\n        break;\n      }\n      case \"cells_per_notebook\": {\n        this.cells_per_notebook = elem;\n        break;\n      }\n      case \"function_definitions\": {\n        this.function_definitions = elem;\n        break;\n      }\n      case \"class_definitions\": {\n        this.class_definitions = elem;\n        break;\n      }\n      case \"cell_coverage\": {\n        this.cell_coverage = elem;\n        break;\n      }\n      default:\n    }\n  }\n\n  getValuesByKey(key: string) {\n    let elem: HTMLDivElement;\n    switch (key) {\n      case \"lines_per_cell\": {\n        elem = this.lines_per_cell;\n        break;\n      }\n      case \"cells_per_notebook\": {\n        elem = this.cells_per_notebook;\n        break;\n      }\n      case \"function_definitions\": {\n        elem = this.function_definitions;\n        break;\n      }\n      case \"class_definitions\": {\n        elem = this.class_definitions;\n        break;\n      }\n      case \"cell_coverage\": {\n        elem = this.cell_coverage;\n        break;\n      }\n      default:\n        return { key, enabled: false, value: 0 };\n    }\n    const chkbx = (elem.querySelector('input[type=\"checkbox\"]') as HTMLInputElement);\n    const input = (elem.querySelector('input[type=\"number\"]') as HTMLInputElement);\n    return { key, enabled: chkbx.checked, value: Number(input.value) };\n  }\n\n  setValuesByKey(key: string, checked = true, value: any = null) {\n    let elem: HTMLDivElement;\n    switch (key) {\n      case \"lines_per_cell\": {\n        elem = this.lines_per_cell;\n        break;\n      }\n      case \"cells_per_notebook\": {\n        elem = this.cells_per_notebook;\n        break;\n      }\n      case \"function_definitions\": {\n        elem = this.function_definitions;\n        break;\n      }\n      case \"class_definitions\": {\n        elem = this.class_definitions;\n        break;\n      }\n      case \"cell_coverage\": {\n        elem = this.cell_coverage;\n        break;\n      }\n      default:\n        return;\n    }\n    const chkbx = (elem.querySelector('input[type=\"checkbox\"]') as HTMLInputElement);\n    const input = (elem.querySelector('input[type=\"number\"]') as HTMLInputElement);\n    if (input) {\n      input.value = value === null ? \"\" : String(value);\n      input.disabled = !checked;\n    }\n    if (chkbx) {\n      chkbx.checked = checked;\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  save = () => {};\n}\n\n/**\n * Widget holding the Celltests widget, container for options and editor\n *\n * @class      CelltestsWidget (name)\n */\nexport class CelltestsWidget extends Widget {\n  currentActiveCell: Cell;\n  notebookTracker: INotebookTracker;\n  editor: CodeEditorWrapper;\n  rules: RulesWidget;\n  controls: ControlsWidget;\n\n  constructor(editorServices: IEditorServices) {\n    super();\n\n    /* create layout */\n    this.layout = new PanelLayout();\n\n    /* create options widget */\n    this.controls = new ControlsWidget();\n\n    /* create options widget */\n    this.rules = new RulesWidget();\n\n    /* create codemirror editor */\n    const editorOptions = {\n      factory: editorServices.factoryService.newInlineEditor,\n      model: new CodeCellModel({}),\n    };\n    this.editor = new CodeEditorWrapper(editorOptions);\n    this.editor.addClass(CELLTEST_TOOL_EDITOR_CLASS);\n    this.editor.model.mimeType = \"text/x-ipython\";\n\n    /* add options and editor to widget */\n    (this.layout as PanelLayout).addWidget(this.controls);\n    (this.layout as PanelLayout).addWidget(this.editor);\n    (this.layout as PanelLayout).addWidget(this.rules);\n\n    /* set add button functionality */\n    this.controls.add = () => {\n      this.fetchAndSetTests();\n      return true;\n    };\n    /* set save button functionality */\n    this.controls.save = () => {\n      this.saveTestsForActiveCell();\n      return true;\n    };\n    /* set clear button functionality */\n    this.controls.clear = () => {\n      this.deleteTestsForActiveCell();\n      return true;\n    };\n\n    this.rules.save = () => {\n      this.saveRulesForCurrentNotebook();\n    };\n\n    this.fetchAndSetTests.bind(this);\n    this.loadTestsForActiveCell.bind(this);\n    this.saveTestsForActiveCell.bind(this);\n    this.deleteTestsForActiveCell.bind(this);\n    this.loadRulesForCurrentNotebook.bind(this);\n    this.setIndicatorNoTests.bind(this);\n    this.setIndicatorTests.bind(this);\n    this.setIndicatorNonCode.bind(this);\n  }\n\n  fetchAndSetTests() {\n    const tests: string[] = [];\n    const splits = this.editor.model.sharedModel.source.split(/\\n/);\n    splits.forEach(split => {\n      tests.push(`${split}\\n`);\n    });\n    if (this.currentActiveCell !== null && this.currentActiveCell.model.type === \"code\") {\n      this.currentActiveCell.model.setMetadata(\"celltests\", tests);\n      this.setIndicatorTests();\n    }\n  }\n\n  loadTestsForActiveCell() {\n    if (this.currentActiveCell !== null && this.currentActiveCell.model.type === \"code\") {\n      let tests = this.currentActiveCell.model.getMetadata(\"tests\");\n      if (tests === undefined || tests.length === 0) {\n        tests = DEFAULT_TESTS;\n        this.setIndicatorNoTests();\n      } else {\n        this.setIndicatorTests();\n      }\n\n      this.editor.model.sharedModel.source = tests.join(\"\");\n      this.editor.editor.setOption(\"readOnly\", false);\n    } else {\n      this.editor.model.sharedModel.source = \"# Not a code cell\";\n      this.editor.editor.setOption(\"readOnly\", true);\n      this.setIndicatorNonCode();\n    }\n  }\n\n  saveTestsForActiveCell() {\n    /* if currentActiveCell exists */\n    if (this.currentActiveCell !== null && this.currentActiveCell.model.type === \"code\") {\n      const tests: string[] = [];\n      const splits = this.editor.model.sharedModel.getSource().split(/\\n/);\n      splits.forEach(split => {\n        tests.push(`${split}\\n`);\n      });\n      this.currentActiveCell.model.setMetadata(\"tests\", tests);\n      this.setIndicatorTests();\n    } else if (this.currentActiveCell !== null) {\n      // TODO this?\n      this.currentActiveCell.model.deleteMetadata(\"tests\");\n      this.setIndicatorNonCode();\n    }\n  }\n\n  deleteTestsForActiveCell() {\n    if (this.currentActiveCell !== null) {\n      this.editor.model.sharedModel.source = \"\";\n      this.currentActiveCell.model.deleteMetadata(\"tests\");\n      this.setIndicatorNoTests();\n    }\n  }\n\n  loadRulesForCurrentNotebook() {\n    if (this.notebookTracker !== null) {\n      const metadata: {[key: string]: string} = this.notebookTracker.currentWidget?.model?.getMetadata(\"celltests\") || {};\n\n      [].slice.call(CELLTEST_RULES).forEach((rule: {[key: string]: string}) => {\n        this.rules.setValuesByKey(rule.key, rule.key in metadata, metadata[rule.key]);\n      });\n    }\n  }\n\n  saveRulesForCurrentNotebook() {\n    if (this.notebookTracker !== null) {\n      const metadata: {[key: string]: number} = {};\n\n      [].slice.call(CELLTEST_RULES).forEach((rule: {[key: string]: string}) => {\n        const settings = this.rules.getValuesByKey(rule.key);\n        if (settings.enabled) {\n          metadata[settings.key] = settings.value;\n        }\n      });\n      this.notebookTracker.currentWidget?.model?.setMetadata(\"celltests\", metadata);\n    }\n  }\n\n  get editorWidget() {\n    return this.editor;\n  }\n\n  setIndicatorNoTests() {\n    (this.controls.svg.firstElementChild?.firstElementChild as HTMLElement).style.fill = \"#e75c57\";\n    this.controls.svglabel.textContent = \"(No Tests)\";\n  }\n\n  setIndicatorTests() {\n    (this.controls.svg.firstElementChild?.firstElementChild as HTMLElement).style.fill = \"#008000\";\n    this.controls.svglabel.textContent = \"(Tests Exist)\";\n  }\n\n  setIndicatorNonCode() {\n    (this.controls.svg.firstElementChild?.firstElementChild as HTMLElement).style.fill = \"var(--jp-inverse-layout-color3)\";\n    this.controls.svglabel.textContent = \"(Non Code Cell)\";\n  }\n}\n"],"names":[],"sourceRoot":""}