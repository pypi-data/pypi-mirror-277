"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.priv.iam.v1.api_key_pb2
import yandex.cloud.priv.iam.v1.api_key_service_pb2
import yandex.cloud.priv.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ApiKeyServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysResponse,
    ]

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.GetApiKeyRequest,
        yandex.cloud.priv.iam.v1.api_key_pb2.ApiKey,
    ]

    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyResponse,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.UpdateApiKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.DeleteApiKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsResponse,
    ]

class ApiKeyServiceAsyncStub:
    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysResponse,
    ]

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.GetApiKeyRequest,
        yandex.cloud.priv.iam.v1.api_key_pb2.ApiKey,
    ]

    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyResponse,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.UpdateApiKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.DeleteApiKeyRequest,
        yandex.cloud.priv.operation.operation_pb2.Operation,
    ]

    ListOperations: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsRequest,
        yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsResponse,
    ]

class ApiKeyServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeysResponse]]: ...

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.GetApiKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.api_key_pb2.ApiKey, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.api_key_pb2.ApiKey]]: ...

    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.api_key_service_pb2.CreateApiKeyResponse]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.UpdateApiKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.DeleteApiKeyRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.priv.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def ListOperations(
        self,
        request: yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsResponse, collections.abc.Awaitable[yandex.cloud.priv.iam.v1.api_key_service_pb2.ListApiKeyOperationsResponse]]: ...

def add_ApiKeyServiceServicer_to_server(servicer: ApiKeyServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
