[tool.poetry]

description = "Schema resources for the National Microbiome Data Collaborative (NMDC)"
documentation = "https://microbiomedata.github.io/nmdc-schema/"
homepage = "https://microbiomedata.github.io/nmdc-schema/"
keywords = ["NMDC", "schema", "metadata", "microbiome"]
license = "MIT"
name = "nmdc_schema"
readme = "README.md"
repository = "https://github.com/microbiomedata/nmdc-schema"
version = "11.0.0rc10"
authors = [
    "Bill Duncan <wdduncan@gmail.com>",
    "Chris Mungall <cjmungall@lbl.gov>",
    "Mark Andrew Miller <MAM@lbl.gov>",
    "Patrick Kalita <pkalita@lbl.gov>",
    "Sujay Patil <spatil@lbl.gov>",
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
]

packages = [
    { include = "nmdc_schema" }, # this is the package Poetry would have included by default
    { include = "migrators", from = "nmdc_schema" },
    { include = "adapters", from = "nmdc_schema/migrators" },
]

[tool.poetry.dependencies] # having trouble with mkdocs in docker esp on linux. addits its ecosystem here may be unnecessary
python = "^3.9"
linkml = "^1.7.10"
linkml-runtime = "^1.7.5"
mkdocs = "^1.4.2"
mkdocs-material = "^9.0.12"
mkdocs-mermaid2-plugin = "^0.6.0"
mkdocs-redirects = "^1.2.1"
pymongo = "^4.7.2"
ruamel-yaml = "^0.18.6"

[tool.poetry.group.dev.dependencies] # are some of these actually required as non-dev dependencies? # cruft for cookiecutter update could be installed with pipx?
black = ">=23.1,<25.0"
click = "^8.1.3"
click-log = "^0.4.0"
exhaustion-check = "^0.1.1" # for exhaustion-check, pretty-sort-yaml (also get-first-of-first)
python-dotenv = "^0.21.0"
rdflib = "^6.2.0" # some LinkML components are not compatible with rdflib 7+ yet
schemasheets = "^0.1.24" # was in main dependencies but brings in so much like pandas
sheets_and_friends = "^0.5.0" # for do_shuttle (and possibly more)
sparql-burger = "^1.0.2"
sparql-dataframe = "^0.4"
pylint = "^3.2.2"
flake8 = "^7.0.0"
mypy = "^1.10.0"
isort = "^5.13.2"
ruff = "^0.4.7"
bandit = "^1.7.8"
pydocstyle = "^6.3.0"
vulture = "^2.11"
pyroma = "^4.2"
autopep8 = "^2.2.0"

[tool.poetry-dynamic-versioning]
# We need poetry-dynamic-versioning to update the version in the src schema file,
# then generate project artifacts from that schema with the real version populated,
# and then perform any build or publish actions. Since this requires running
# `poetry dynamic-versioning` manually before `poetry build`, we set enable = false.
enable = false
vcs = "git"
style = "pep440"

[tool.poetry-dynamic-versioning.substitution]
files = [
    "src/schema/nmdc.yaml"
]
patterns = [
    "(^\\s*__version__\\s*(?::.*?)?=\\s*['\\\"])[^'\\\"]*(['\\\"])",
    "(^version:\\s*['\\\"]?)[^'\\\"]*?(['\\\"]?)$"
]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.extras]
docs = ["mkdocs-material"]

[tool.poetry.scripts]
anyuri-strings-to-iris = 'nmdc_schema.anyuri_strings_to_iris:expand_curies'
build-datafile-from-api-requests = "nmdc_schema.build_datafile_from_api_requests:main"
class-sparql = "nmdc_schema.class_sparql:main"
create-migrator = 'nmdc_schema.migrators.cli.create_migrator:create_migrator'
fetch-nmdc-schema = "nmdc_schema.nmdc_data:get_nmdc_jsonschema"
generate-import-slots-regardless = "nmdc_schema.generate_import_slots_regardless:main"
get-mixs-slots-matching-slot-list = "nmdc_schema.get_mixs_slots_matching_slot_list:main"
get-mixs-slots-used-in-schema = "nmdc_schema.get_mixs_slots_used_in_schema:main" # see nmdc_schema/generate_import_slots_regardless.py
get-slots-from-class = "nmdc_schema.get_slots_from_class:main" # see tests/test_getters.py
get-study-id-from-filename = "src.scripts.get_study_id_from_filename:main"
get-study-related-records = "src.scripts.nmdc_database_tools:cli"
migration-recursion = 'nmdc_schema.migration_recursion:main'
nmdc-data = "nmdc_schema.nmdc_data:cli"
nmdc-ncbi-mapping = "src.scripts.ncbi_nmdc_exact_term_matching:cli"
nmdc-version = "nmdc_schema.nmdc_version:cli"
pure-export = "nmdc_schema.dump_single_modality:cli"
slot-range-type-reporter = "src.scripts.slot_range_type_reporter:cli"
test-more-tolerant-schema = "nmdc_schema.test_more_tolerant_schema:do_test"
