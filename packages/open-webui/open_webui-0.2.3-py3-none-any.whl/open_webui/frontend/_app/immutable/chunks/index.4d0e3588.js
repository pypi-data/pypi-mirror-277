import{q as s}from"./index.f3427c3e.js";const h=async e=>{let n=null;const o=await fetch(`${s}/auths/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},u=async(e,n)=>{let o=null;const t=await fetch(`${s}/auths/signin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:n})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),o=a.detail,null));if(o)throw o;return t},p=async(e,n,o,t)=>{let a=null;const r=await fetch(`${s}/auths/signup`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:n,password:o,profile_image_url:t})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),a=i.detail,null));if(a)throw a;return r},d=async(e,n,o,t,a="pending")=>{let r=null;const i=await fetch(`${s}/auths/add`,{method:"POST",headers:{"Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:n,email:o,password:t,role:a})}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),r=l.detail,null));if(r)throw r;return i},y=async(e,n,o)=>{let t=null;const a=await fetch(`${s}/auths/update/profile`,{method:"POST",headers:{"Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:n,profile_image_url:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return a},w=async(e,n,o)=>{let t=null;const a=await fetch(`${s}/auths/update/password`,{method:"POST",headers:{"Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({password:n,new_password:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return a},f=async e=>{let n=null;const o=await fetch(`${s}/auths/signup/enabled`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},g=async e=>{let n=null;const o=await fetch(`${s}/auths/signup/user/role`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},j=async(e,n)=>{let o=null;const t=await fetch(`${s}/auths/signup/user/role`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({role:n})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),o=a.detail,null));if(o)throw o;return t},T=async e=>{let n=null;const o=await fetch(`${s}/auths/signup/enabled/toggle`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},$=async e=>{let n=null;const o=await fetch(`${s}/auths/token/expires`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o},S=async(e,n)=>{let o=null;const t=await fetch(`${s}/auths/token/expires/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({duration:n})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),o=a.detail,null));if(o)throw o;return t},k=async e=>{let n=null;const o=await fetch(`${s}/auths/api_key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o.api_key},m=async e=>{let n=null;const o=await fetch(`${s}/auths/api_key`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return o.api_key};export{m as a,y as b,k as c,f as d,g as e,$ as f,h as g,j as h,S as i,d as j,u as k,p as l,T as t,w as u};
//# sourceMappingURL=index.4d0e3588.js.map
