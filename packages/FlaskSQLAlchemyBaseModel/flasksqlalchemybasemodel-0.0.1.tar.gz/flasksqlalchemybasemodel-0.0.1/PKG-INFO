Metadata-Version: 2.1
Name: FlaskSQLAlchemyBaseModel
Version: 0.0.1
Summary: This is paired with flask_sqlalchemy to build data models. created by Joel .A.
License: MIT
Author: AnozieChibuike
Author-email: chibuikeanozie0@gmail.com
Requires-Python: >=3.5,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: flask (>=3.0.0,<4.0.0)
Requires-Dist: flask-sqlalchemy (>=3.1.1,<4.0.0)
Requires-Dist: sqlalchemy (>=2.0.0,<3.0.0)
Description-Content-Type: text/markdown

[![PyPI Version](https://img.shields.io/pypi/v/paystackClientApi.svg)](https://pypi.org/project/paystackClientApi/)
[![Python Versions](https://img.shields.io/pypi/pyversions/paystackClientApi.svg)](https://pypi.org/project/paystackClientApi/)
[![License](https://img.shields.io/pypi/l/paystackClientApi.svg)](https://github.com/AnozieChibuike/paystackClientApi/blob/master/LICENSE)

Paystack api implemented as a package, paystack-client-Api is a simple project created by Joel .A.

## Installation

You can install this package using `pip`:

```bash
pip install paystackClientApi 
```

Usage
-----

```python
from paystackClientApi import Paystack

paystack = Paystack(api_key=<Your paystack api key>)
reference = <Your custom reference>
pay = paystack.initializeTransaction(email, amount, reference=reference, callback_url=<your callback url>) 
# The above will return a dictionary which you can access
ref = paystack.verifyTransaction(reference)
# The above will return a dictionary which you can access
```
Contributing
------------

Contributions are welcome! If you'd like to contribute to this project, please follow these steps:

1.  Fork the repository.
2.  Create a new branch for your feature or bug fix.
3.  Make your changes and test them thoroughly.
4.  Create a pull request with a clear description of your changes.

License
-------

This project is licensed under the MIT License - see the [LICENSE](https://mit-license.org/) file for details.

Acknowledgments
---------------

-   Inspired by the openai package in Python.

Contact
-------

-   Anozie Joel
-   Email: chibuikeanozie0@gmail.com
-   GitHub: [Anozie Chibuike](https://github.com/AnozieChibuike)
