{"version":3,"file":"static/chunks/7570.c315612472528ede.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/instance/flattenCodeLocationRows.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryCountTags.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/workspace/VirtualizedCodeLocationRow.tsx","webpack://_N_E/../ui-core/src/workspace/RepositoryLocationsList.tsx","webpack://_N_E/../ui-core/src/instance/CodeLocationsPage.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx"],"sourcesContent":["import {CodeLocationRowType} from '../workspace/VirtualizedCodeLocationRow';\nimport {WorkspaceLocationNodeFragment} from '../workspace/types/WorkspaceContext.types';\n\nconst flatten = (locationEntries: WorkspaceLocationNodeFragment[]) => {\n  // Consider each loaded repository to be a \"code location\".\n  const all: CodeLocationRowType[] = [];\n  for (const locationNode of locationEntries) {\n    const {locationOrLoadError} = locationNode;\n    if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n      all.push({type: 'error' as const, node: locationNode});\n    } else {\n      locationOrLoadError.repositories.forEach((repo) => {\n        all.push({type: 'repository' as const, codeLocation: locationNode, repository: repo});\n      });\n    }\n  }\n  return all;\n};\n\nconst filterBySearch = (flattened: CodeLocationRowType[], searchValue: string) => {\n  const queryString = searchValue.toLocaleLowerCase();\n  return flattened.filter((row) => {\n    if (row.type === 'error') {\n      return row.node.name.toLocaleLowerCase().includes(queryString);\n    }\n    return (\n      row.codeLocation.name.toLocaleLowerCase().includes(queryString) ||\n      row.repository.name.toLocaleLowerCase().includes(queryString)\n    );\n  });\n};\n\nexport const flattenCodeLocationRows = (\n  locationEntries: WorkspaceLocationNodeFragment[],\n  searchValue: string = '',\n) => {\n  const flattened = flatten(locationEntries);\n  const filtered = filterBySearch(flattened, searchValue);\n\n  return {\n    flattened,\n    filtered,\n  };\n};\n","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  StyledRawCodeMirror,\n  Table,\n} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Library</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce((accum, item) => {\n      return {...accum, [item.key]: item.value};\n    }, {});\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {DagsterRepoOption} from './WorkspaceContext';\nimport {RepoAddress} from './types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\nexport const RepositoryCountTags = ({\n  repo,\n  repoAddress,\n}: {\n  repo: DagsterRepoOption['repository'];\n  repoAddress: RepoAddress;\n}) => {\n  const assetGroupCount = repo.assetGroups.length;\n  const jobCount = repo.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repo.schedules.length;\n  const sensorCount = repo.sensors.length;\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Tooltip\n        content={assetGroupCount === 1 ? '1 asset group' : `${assetGroupCount} asset groups`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/assets')}>\n          <Tag interactive icon=\"asset_group\">\n            {assetGroupCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={jobCount === 1 ? '1 job' : `${jobCount} jobs`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/jobs')}>\n          <Tag interactive icon=\"job\">\n            {jobCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip\n        content={scheduleCount === 1 ? '1 schedule' : `${scheduleCount} schedules`}\n        placement=\"top\"\n      >\n        <CountLink to={workspacePathFromAddress(repoAddress, '/schedules')}>\n          <Tag interactive icon=\"schedule\">\n            {scheduleCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n      <Tooltip content={sensorCount === 1 ? '1 sensor' : `${sensorCount} sensors`} placement=\"top\">\n        <CountLink to={workspacePathFromAddress(repoAddress, '/sensors')}>\n          <Tag interactive icon=\"sensors\">\n            {sensorCount}\n          </Tag>\n        </CountLink>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst CountLink = styled(Link)`\n  :hover,\n  :active {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Icon,\n  JoinedButtons,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {WorkspaceDisplayMetadataFragment} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {showSharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\ninterface Props {\n  locationNode: WorkspaceRepositoryLocationNode;\n}\n\nexport const CodeLocationRowSet = ({locationNode}: Props) => {\n  const {name, locationOrLoadError} = locationNode;\n\n  if (!locationOrLoadError || locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <tr>\n        <td style={{maxWidth: '400px', color: Colors.textLight()}}>\n          <MiddleTruncate text={name} />\n        </td>\n        <td>\n          <LocationStatus location={name} locationOrError={locationNode} />\n        </td>\n        <td style={{whiteSpace: 'nowrap'}}>\n          <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n        </td>\n        <td>{'\\u2013'}</td>\n        <td style={{width: '180px'}}>\n          <JoinedButtons>\n            <ReloadButton location={name} />\n            <CodeLocationMenu locationNode={locationNode} />\n          </JoinedButtons>\n        </td>\n      </tr>\n    );\n  }\n\n  const repositories = [...locationOrLoadError.repositories].sort((a, b) =>\n    a.name.localeCompare(b.name),\n  );\n\n  return (\n    <>\n      {repositories.map((repository) => {\n        const repoAddress = buildRepoAddress(repository.name, name);\n        const allMetadata = [...locationNode.displayMetadata, ...repository.displayMetadata];\n        return (\n          <tr key={repoAddressAsHumanString(repoAddress)}>\n            <td style={{maxWidth: '400px'}}>\n              <Box flex={{direction: 'column', gap: 4}}>\n                <div style={{fontWeight: 500}}>\n                  <Link to={workspacePathFromAddress(repoAddress)}>\n                    <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                  </Link>\n                </div>\n                <ImageName metadata={allMetadata} />\n                <ModuleOrPackageOrFile metadata={allMetadata} />\n              </Box>\n            </td>\n            <td>\n              <LocationStatus location={repository.name} locationOrError={locationNode} />\n            </td>\n            <td style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </td>\n            <td>\n              <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n            </td>\n            <td style={{width: '180px'}}>\n              <JoinedButtons>\n                <ReloadButton location={name} />\n                <CodeLocationMenu locationNode={locationNode} />\n              </JoinedButtons>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    await showSharedToaster({\n      intent: 'success',\n      icon: 'done',\n      message: 'Image string copied!',\n    });\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox flex={{direction: 'row', gap: 4}}>\n        <span style={{fontWeight: 500}}>image:</span>\n        <Tooltip content=\"Click to copy\" placement=\"top\" display=\"block\">\n          <button onClick={onClick}>\n            <MiddleTruncate text={imageKV.value} />\n          </button>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp4-popover2-target {\n    overflow: hidden;\n  }\n\n  button {\n    background: ${Colors.backgroundDefault()};\n    border: none;\n    color: ${Colors.textLight()};\n    cursor: pointer;\n    font-size: 12px;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    width: 100%;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) => key === 'module_name' || key === 'package_name' || key === 'python_file',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <MiddleTruncate text={imageKV.value} />\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  location: string;\n  locationOrError: WorkspaceRepositoryLocationNode;\n}) => {\n  const {location, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(() => buildReloadFnForLocation(location), [location]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationOrError.loadStatus === 'LOADING') {\n    if (locationOrError.locationOrLoadError) {\n      return (\n        <Tag minimal intent=\"primary\">\n          Updating...\n        </Tag>\n      );\n    } else {\n      return (\n        <Tag minimal intent=\"primary\">\n          Loading...\n        </Tag>\n      );\n    }\n  }\n\n  if (locationOrError.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '14px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={location}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"refresh\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n","import {Box, JoinedButtons, MiddleTruncate} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {CodeLocationMenu} from './CodeLocationMenu';\nimport {ImageName, LocationStatus, ModuleOrPackageOrFile, ReloadButton} from './CodeLocationRowSet';\nimport {RepositoryCountTags} from './RepositoryCountTags';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext';\nimport {buildRepoAddress} from './buildRepoAddress';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {\n  WorkspaceLocationNodeFragment,\n  WorkspaceRepositoryFragment,\n} from './types/WorkspaceContext.types';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {HeaderCell, HeaderRow, RowCell} from '../ui/VirtualizedTable';\n\nexport type CodeLocationRowType =\n  | {\n      type: 'repository';\n      codeLocation: WorkspaceLocationNodeFragment;\n      repository: WorkspaceRepositoryFragment;\n    }\n  | {type: 'error'; node: WorkspaceLocationNodeFragment};\n\nconst TEMPLATE_COLUMNS = '3fr 1fr 1fr 240px 160px';\n\ninterface ErrorRowProps {\n  locationNode: WorkspaceRepositoryLocationNode;\n  index: number;\n}\n\nexport const VirtualizedCodeLocationErrorRow = React.forwardRef(\n  (props: ErrorRowProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {locationNode, index} = props;\n    const {name} = locationNode;\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <MiddleTruncate text={name} />\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={name} locationOrError={locationNode} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={locationNode.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>{'\\u2013'}</RowCell>\n          <RowCell>\n            <JoinedButtons>\n              <ReloadButton location={name} />\n              <CodeLocationMenu locationNode={locationNode} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\ninterface Props {\n  codeLocation: WorkspaceRepositoryLocationNode;\n  repository: WorkspaceRepositoryFragment;\n  index: number;\n  // measure: (node: Element | null) => void;\n}\n\nexport const VirtualizedCodeLocationRow = React.forwardRef(\n  (props: Props, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const {codeLocation, repository, index} = props;\n    const repoAddress = buildRepoAddress(repository.name, repository.location.name);\n\n    const allMetadata = [...codeLocation.displayMetadata, ...repository.displayMetadata];\n\n    return (\n      <div ref={ref} data-index={index}>\n        <RowGrid border=\"bottom\">\n          <RowCell>\n            <Box flex={{direction: 'column', gap: 4}}>\n              <div style={{fontWeight: 500}}>\n                <Link to={workspacePathFromAddress(repoAddress)}>\n                  <MiddleTruncate text={repoAddressAsHumanString(repoAddress)} />\n                </Link>\n              </div>\n              <ImageName metadata={allMetadata} />\n              <ModuleOrPackageOrFile metadata={allMetadata} />\n            </Box>\n          </RowCell>\n          <RowCell>\n            <div>\n              <LocationStatus location={repository.name} locationOrError={codeLocation} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <div style={{whiteSpace: 'nowrap'}}>\n              <TimeFromNow unixTimestamp={codeLocation.updatedTimestamp} />\n            </div>\n          </RowCell>\n          <RowCell>\n            <RepositoryCountTags repo={repository} repoAddress={repoAddress} />\n          </RowCell>\n          <RowCell style={{alignItems: 'flex-end'}}>\n            <JoinedButtons>\n              <ReloadButton location={codeLocation.name} />\n              <CodeLocationMenu locationNode={codeLocation} />\n            </JoinedButtons>\n          </RowCell>\n        </RowGrid>\n      </div>\n    );\n  },\n);\n\nexport const VirtualizedCodeLocationHeader = () => {\n  return (\n    <HeaderRow templateColumns={TEMPLATE_COLUMNS} sticky>\n      <HeaderCell>Name</HeaderCell>\n      <HeaderCell>Status</HeaderCell>\n      <HeaderCell>Updated</HeaderCell>\n      <HeaderCell>Definitions</HeaderCell>\n      <HeaderCell style={{textAlign: 'right'}}>Actions</HeaderCell>\n    </HeaderRow>\n  );\n};\n\nconst RowGrid = styled(Box)`\n  display: grid;\n  grid-template-columns: ${TEMPLATE_COLUMNS};\n`;\n","import {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {useRef} from 'react';\n\nimport {\n  CodeLocationRowType,\n  VirtualizedCodeLocationErrorRow,\n  VirtualizedCodeLocationHeader,\n  VirtualizedCodeLocationRow,\n} from './VirtualizedCodeLocationRow';\nimport {Container, DynamicRowContainer, Inner} from '../ui/VirtualizedTable';\n\ninterface Props {\n  loading: boolean;\n  codeLocations: CodeLocationRowType[];\n  searchValue: string;\n}\n\nexport const RepositoryLocationsList = ({loading, codeLocations, searchValue}: Props) => {\n  const parentRef = useRef<HTMLDivElement>(null);\n\n  const virtualizer = useVirtualizer({\n    count: codeLocations.length,\n    getScrollElement: () => parentRef.current,\n    estimateSize: () => 64,\n    overscan: 10,\n  });\n\n  const totalHeight = virtualizer.getTotalSize();\n  const items = virtualizer.getVirtualItems();\n\n  if (loading && !codeLocations.length) {\n    return (\n      <Box flex={{gap: 8, alignItems: 'center'}} padding={{horizontal: 24}}>\n        <Spinner purpose=\"body-text\" />\n        <div>Loading…</div>\n      </Box>\n    );\n  }\n\n  if (!codeLocations.length) {\n    if (searchValue) {\n      return (\n        <Box padding={{vertical: 32}}>\n          <NonIdealState\n            icon=\"folder\"\n            title=\"No matching code locations\"\n            description={\n              <div>\n                No code locations were found for search query <strong>{searchValue}</strong>.\n              </div>\n            }\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"folder\"\n          title=\"No code locations\"\n          description=\"When you add a code location, your definitions will appear here.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Container ref={parentRef}>\n      <VirtualizedCodeLocationHeader />\n      <Inner $totalHeight={totalHeight}>\n        <DynamicRowContainer $start={items[0]?.start ?? 0}>\n          {items.map(({index, key}) => {\n            const row: CodeLocationRowType = codeLocations[index]!;\n            if (row.type === 'error') {\n              return (\n                <VirtualizedCodeLocationErrorRow\n                  key={key}\n                  index={index}\n                  locationNode={row.node}\n                  ref={virtualizer.measureElement}\n                />\n              );\n            }\n\n            return (\n              <VirtualizedCodeLocationRow\n                key={key}\n                index={index}\n                codeLocation={row.codeLocation}\n                repository={row.repository}\n                ref={virtualizer.measureElement}\n              />\n            );\n          })}\n        </DynamicRowContainer>\n      </Inner>\n    </Container>\n  );\n};\n","import {Box, Heading, PageHeader, Subheading, TextInput} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {flattenCodeLocationRows} from './flattenCodeLocationRows';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepositoryLocationsList} from '../workspace/RepositoryLocationsList';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext';\n\nconst SEARCH_THRESHOLD = 10;\n\nexport const CodeLocationsPageContent = () => {\n  useTrackPageView();\n  useDocumentTitle('Code locations');\n\n  const {locationEntries, loading} = React.useContext(WorkspaceContext);\n\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const onChangeSearch = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const queryString = searchValue.toLocaleLowerCase();\n  const {flattened, filtered} = React.useMemo(() => {\n    return flattenCodeLocationRows(locationEntries, queryString);\n  }, [locationEntries, queryString]);\n\n  const entryCount = flattened.length;\n  const showSearch = entryCount > SEARCH_THRESHOLD;\n\n  const subheadingText = () => {\n    if (loading || !entryCount) {\n      return 'Code locations';\n    }\n\n    return entryCount === 1 ? '1 code location' : `${entryCount} code locations`;\n  };\n\n  return (\n    <>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n        style={{height: '64px'}}\n      >\n        {showSearch ? (\n          <TextInput\n            icon=\"search\"\n            value={searchValue}\n            onChange={onChangeSearch}\n            placeholder=\"Filter code locations by name…\"\n            style={{width: '400px'}}\n          />\n        ) : (\n          <Subheading id=\"repository-locations\">{subheadingText()}</Subheading>\n        )}\n        <Box flex={{direction: 'row', gap: 12, alignItems: 'center'}}>\n          {showSearch ? <div>{`${entryCount} code locations`}</div> : null}\n          <ReloadAllButton />\n        </Box>\n      </Box>\n      <RepositoryLocationsList\n        loading={loading}\n        codeLocations={filtered}\n        searchValue={searchValue}\n      />\n    </>\n  );\n};\n\nexport const CodeLocationsPage = () => {\n  const {pageTitle} = React.useContext(InstancePageContext);\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <PageHeader title={<Heading>{pageTitle}</Heading>} tabs={<InstanceTabs tab=\"locations\" />} />\n      <CodeLocationsPageContent />\n    </Box>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default CodeLocationsPage;\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\nimport {useBlockTraceOnQueryResult} from '../performance/TraceContext';\n\nexport const useCanSeeConfig = () => {\n  const queryResult = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  useBlockTraceOnQueryResult(queryResult, 'InstanceConfigHasInfoQuery');\n  return !!queryResult.data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n"],"names":["flatten","all","locationNode","locationEntries","locationOrLoadError","__typename","repositories","forEach","push","type","codeLocation","repository","repo","node","filterBySearch","flattened","searchValue","queryString","toLocaleLowerCase","filter","row","name","includes","flattenCodeLocationRows","filtered","CodeLocationMenu","param","configIsOpen","setConfigIsOpen","useState","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","dagsterLibraryVersions","jsx_runtime","jsx","MenuItem","icon","text","onClick","DagsterLibrariesDialog","libraries","isOpen","setIsOpen","jsxs","Fragment","Popover","position","content","Menu","Button","Icon","CodeLocationConfigDialog","metadata","displayMetadata","Dialog","title","onClose","style","width","CodeLocationConfig","DialogFooter","topBorder","intent","Table","thead","tr","th","tbody","map","td","library","version","yamlString","useMemo","kvPairs","reduce","accum","item","key","value","yaml","StyledRawCodeMirror","options","readOnly","lineNumbers","mode","theme","RepositoryCountTags","repoAddress","assetGroupCount","assetGroups","length","jobCount","pipelines","isHiddenAssetGroupJob","scheduleCount","schedules","sensorCount","sensors","Box","flex","direction","gap","alignItems","Tooltip","concat","placement","CountLink","to","workspacePathFromAddress","Tag","interactive","styled","Link","ImageName","copy","useCopyToClipboard","imageKV","find","useCallback","showSharedToaster","message","ImageNameBox","span","fontWeight","display","button","MiddleTruncate","Colors","ModuleOrPackageOrFile","color","fontSize","LocationStatus","locationOrError","location","props","showDialog","setShowDialog","reloadFn","buildReloadFnForLocation","reloading","tryReload","useRepositoryLocationReload","scope","loadStatus","minimal","ButtonLink","RepositoryLocationNonBlockingErrorDialog","error","onDismiss","onTryReload","ReloadButton","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","disabled","loading","TEMPLATE_COLUMNS","VirtualizedCodeLocationErrorRow","React","ref","index","div","data-index","RowGrid","border","RowCell","whiteSpace","TimeFromNow","unixTimestamp","updatedTimestamp","JoinedButtons","VirtualizedCodeLocationRow","buildRepoAddress","allMetadata","repoAddressAsHumanString","VirtualizedCodeLocationHeader","HeaderRow","templateColumns","sticky","HeaderCell","textAlign","RepositoryLocationsList","items","codeLocations","parentRef","useRef","virtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","overscan","totalHeight","getTotalSize","getVirtualItems","padding","horizontal","Spinner","purpose","Container","Inner","$totalHeight","DynamicRowContainer","$start","start","measureElement","vertical","NonIdealState","description","strong","CodeLocationsPageContent","useTrackPageView","useDocumentTitle","WorkspaceContext","setSearchValue","onChangeSearch","e","target","entryCount","showSearch","justifyContent","height","TextInput","onChange","placeholder","Subheading","id","ReloadAllButton","CodeLocationsPage","pageTitle","InstancePageContext","overflow","PageHeader","Heading","tabs","InstanceTabs","tab","instance_CodeLocationsPage","useCanSeeConfig","queryResult","useQuery","INSTANCE_CONFIG_HAS_INFO","useBlockTraceOnQueryResult","data","instance","hasInfo","gql"],"sourceRoot":""}