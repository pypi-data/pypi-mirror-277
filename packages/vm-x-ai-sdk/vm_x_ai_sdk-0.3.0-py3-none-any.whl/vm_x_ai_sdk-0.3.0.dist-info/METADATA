Metadata-Version: 2.1
Name: vm-x-ai-sdk
Version: 0.3.0
Summary: VM-X AI Python SDK
Home-page: https://github.com/vm-x-ai/vm-x-ai-sdk
License: MIT
Keywords: VM-X,AI,SDK,Python
Author: VM-X Engineering
Author-email: eng@vm-x.ai
Maintainer: VM-X Engineering
Maintainer-email: eng@vm-x.ai
Requires-Python: >=3.8,<4
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: cachetools (>=5.3.3,<6.0.0)
Requires-Dist: grpcio (>=1.62.2,<2.0.0)
Requires-Dist: protobuf (>=4.21.6,<5.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Project-URL: Repository, https://github.com/vm-x-ai/vm-x-ai-sdk
Description-Content-Type: text/markdown

# VM-X SDK for Python

## Description

VM-X AI SDK client for Python

## Installation

```bash
pip install vm-x-ai-sdk
```

```bash
poetry add vm-x-ai-sdk
```

## Usage

```python
from vmxai import CompletionRequest, OpenAIRequest, RequestMessage, VMXClient, VMXClientOAuth

client = VMXClient(
    workspace_id="ws-abc123",
    environment_id="env-abv123",
    domain="env-abc123.clnt.vm-x.ai",
    auth=VMXClientOAuth(
        client_id="clientId", client_secret="clientSecret"
    ),
)

result = client.completion(
    CompletionRequest(
        provider="openai",
        resource="my-resource",
        workload="my-workload",
        messages=[RequestMessage(role="user", content="hey")],
        functions=[],
        openai=OpenAIRequest(model="gpt-3.5-turbo"),
    ),
    stream=True,
)

for message in result:
    print(message.message)

```

## [Change Log](./CHANGELOG.md)

