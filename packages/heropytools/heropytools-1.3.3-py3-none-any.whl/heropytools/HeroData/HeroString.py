# *************************************************************** #
#               Copyright Â© Hero Imaging AB 2022. 				  #
#  					  All Rights Reserved.						  #
# *************************************************************** #

from __future__ import annotations
from typing import Callable, Any, Optional
from heropytools.Serialization.Attributes import Attributes
from heropytools.Serialization.CustomSerializer import CustomSerializer

from .HeroData import HeroData
from .HeroDataType import HeroDataType


class HeroString(HeroData):

    def __init__(self, value: str):
        
        HeroData.__init__(self)
        self._value = value

    @staticmethod
    def create(obj):
        return HeroString(obj)

    @staticmethod
    def create_from_dict(data: dict):
        return data["_value"]

    def __eq__(self, other: HeroString):
        if not super(HeroString, self).__eq__(other):
            return False
        return self._value == other._value

    # --- Autogenerated --- #

    # Name of the type.
    _type_str = "HeroString"

    # Datatype attributes.
    _attributes = Attributes("HS", version=0, member_count=1)

    # Serialization.
    def serialize(self, writer_fun: Callable[[Any, str, str, Optional[CustomSerializer]], None]):
        super(HeroString, self).serialize(writer_fun)
        writer_fun(self._value, "String", "V", None)

    # Deserialization.
    @staticmethod
    def deserialize(reader_fun: Callable[[str, Optional[CustomSerializer]], Any]):
        data = super(HeroString, HeroString).deserialize(reader_fun)
        data["_value"], _ = reader_fun("String", None)
        return data
