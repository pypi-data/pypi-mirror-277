# *************************************************************** #
#               Copyright Â© Hero Imaging AB 2022. 				  #
#  					  All Rights Reserved.						  #
# *************************************************************** #

from __future__ import annotations
from typing import Callable, Any, Optional
from heropytools.Serialization.Attributes import Attributes
from heropytools.Serialization.CustomSerializer import CustomSerializer
import numpy as np

from .HeroDataType import HeroDataType

from abc import ABC


class Vector3:
    
    # Crate the object with all values initialized to defaults.
    def __init__(self, values: np.ndarray):
        self._values = values

    @staticmethod
    def create(obj):
        return Vector3(obj)

    @staticmethod
    def create_from_dict(data: dict):
        return data['_values']

    def get_container_id(self):
        pass

    # --- Autogenerated --- #

    # Name of the type.
    _type_str = "Vector3"

    # Datatype attributes.
    _attributes = Attributes("Vector3", version=0, member_count=1)

    # Serialization.
    def serialize(self, writer_fun: Callable[[Any, str, str, Optional[CustomSerializer]], None]):
        writer_fun(self._values, "Double[]", "values", None)

    # Deserialization.
    @staticmethod
    def deserialize(reader_fun: Callable[[str, Optional[CustomSerializer]], Any]):
        data = dict()
        data["_values"], _ = reader_fun("Double[]", None)
        return data
