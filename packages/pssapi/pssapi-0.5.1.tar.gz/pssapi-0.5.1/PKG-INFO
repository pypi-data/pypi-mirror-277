Metadata-Version: 2.1
Name: pssapi
Version: 0.5.1
Summary: Wrapper for the Pixel Starships API
Home-page: https://github.com/PSS-Tools-Development/pssapi.py
License: MIT
Author: The worst.
Author-email: theworstpss@gmail.com
Requires-Python: >=3.11,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: APScheduler (>=3.10.4,<4.0.0)
Requires-Dist: aiohttp (>=3.8.4,<4.0.0)
Requires-Dist: pytz (>=2022.7.1,<2023.0.0)
Requires-Dist: websockets (>=12.0,<13.0)
Project-URL: Bug Tracker, https://github.com/PSS-Tools-Development/pssapi.py/issues
Project-URL: Changelog, https://github.com/PSS-Tools-Development/pssapi.py/releases
Description-Content-Type: text/markdown

# Wrapper for the Pixel Starships API

This library allows you to request the Pixel Starships API through a Python Wrapper.

## Supported Platforms

- Python: 3.11

## Usage

### Installation

You can install this module using your package management method. For example:

```bash
pip install pssapi
```

### Get started

```python
import asyncio

from pssapi import PssApiClient


async def main():
    client = PssApiClient()

    item_designs = await client.item_service.list_item_designs()
    print(f"Found {len(item_designs)} item designs.")
    print(f"First item: {item_designs[0].item_design_name}")


if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    asyncio.run(main())
```

## Contributing

### Install development dependencies
Linux:

```bash
make init
```

Windows:

```bash
./win init
```

### Format code
Linux:

```bash
make format
```

Windows:
```bash
./win format
```

### Check & Test
Linux:

```bash
make check
make test
```

Windows:
```bash
./win check
./win test
```

### Showcase

```bash
poetry run python examples/showcase.py
```

