[project]
name = "chgnet"
version = "0.3.8"
description = "Pretrained Universal Neural Network Potential for Charge-informed Atomistic Modeling"
authors = [{ name = "Bowen Deng", email = "bowendeng@berkeley.edu" }]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "Modified BSD" }
dependencies = [
    "ase>=3.23.0",
    "cython>=3",
    "numpy>=1.26",
    "nvidia-ml-py3>=7.352.0",
    "pymatgen>=2023.10.11",
    "torch>=1.11.0",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]

[project.optional-dependencies]
test = ["pytest-cov>=4", "pytest>=8"]
# needed to run interactive example notebooks
examples = ["crystal-toolkit>=2023.11.3", "pandas>=2.2"]
docs = ["lazydocs>=0.4"]

[project.urls]
Source = "https://github.com/CederGroupHub/chgnet"
Package = "https://pypi.org/project/chgnet"

[tool.setuptools.packages]
find = { include = ["chgnet*"], exclude = ["tests", "tests*"] }

[tool.setuptools.package-data]
"chgnet" = ["*.json"]
"chgnet.pretrained" = ["*", "**/*"]

[build-system]
requires = ["Cython", "setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
target-version = "py39"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN001",  # TODO add missing type annotations
    "ANN003",
    "ANN101",
    "ANN102",
    "B019",    # Use of functools.lru_cache on methods can lead to memory leaks
    "BLE001",
    "C408",    # unnecessary-collection-call
    "C901",    # function is too complex
    "COM812",  # trailing comma missing
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D205",    # 1 blank line required between summary line and description
    "DTZ005",  # use of datetime.now() without timezone
    "E731",    # do not assign a lambda expression, use a def
    "EM",
    "ERA001",  # found commented out code
    "ISC001",
    "NPY002",  # TODO replace legacy np.random.seed
    "PLR0912", # too many branches
    "PLR0913", # too many args in function def
    "PLR0915", # too many statements
    "PLW2901", # Outer for loop variable overwritten by inner assignment target
    "PT006",   # pytest-parametrize-names-wrong-type
    "PTH",     # prefer Path to os.path
    "S108",
    "S301",    # pickle can be unsafe
    "S310",
    "S311",
    "TRY003",
    "TRY300",
]
pydocstyle.convention = "google"
isort.required-imports = ["from __future__ import annotations"]
isort.split-on-trailing-comma = false

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"site/*" = ["INP001", "S602"]
"tests/*" = [
    "ANN201",
    "D100",
    "D103",
    "FBT001",
    "FBT002",
    "INP001",
    "PLR2004",
    "S101",
]
# E402 Module level import not at top of file
"examples/*" = ["E402", "I002", "INP001", "N816", "S101", "T201"]
"chgnet/**/*" = ["T201"]
"__init__.py" = ["F401"]

[tool.coverage.run]
source = ["chgnet"]

[tool.coverage.report]
omit = ["tests/*"]
