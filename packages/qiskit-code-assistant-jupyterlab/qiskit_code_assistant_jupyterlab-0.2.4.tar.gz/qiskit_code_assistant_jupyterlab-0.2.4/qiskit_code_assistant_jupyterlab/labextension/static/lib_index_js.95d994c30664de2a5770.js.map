{"version":3,"file":"lib_index_js.95d994c30664de2a5770.js","mappings":"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","sources":["webpack://qiskit-code-assistant-jupyterlab/./src/QiskitCompletionProvider.ts","webpack://qiskit-code-assistant-jupyterlab/./src/StatusBarWidget.ts","webpack://qiskit-code-assistant-jupyterlab/./src/index.ts","webpack://qiskit-code-assistant-jupyterlab/./src/service/api.ts","webpack://qiskit-code-assistant-jupyterlab/./src/service/autocomplete.ts","webpack://qiskit-code-assistant-jupyterlab/./src/service/disclaimer.tsx","webpack://qiskit-code-assistant-jupyterlab/./src/service/modelHandler.ts","webpack://qiskit-code-assistant-jupyterlab/./src/service/token.ts","webpack://qiskit-code-assistant-jupyterlab/./src/utils/handler.ts","webpack://qiskit-code-assistant-jupyterlab/./src/utils/icons.ts"],"sourcesContent":["/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CompletionHandler,\n  ICompletionContext,\n  ICompletionProvider,\n  IInlineCompletionContext,\n  IInlineCompletionItem,\n  IInlineCompletionList,\n  IInlineCompletionProvider,\n  InlineCompletionTriggerKind\n} from '@jupyterlab/completer';\nimport { NotebookPanel } from '@jupyterlab/notebook';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport { Widget } from '@lumino/widgets';\n\nimport { postModelPromptAccept } from './service/api';\nimport { autoComplete } from './service/autocomplete';\nimport { qiskitIcon } from './utils/icons';\n\nfunction getInputText(text: string, widget: Widget): string {\n  const cellsContents: string[] = [];\n\n  if (widget instanceof NotebookPanel) {\n    const currentCellIndex: number = widget.content.activeCellIndex;\n    const cells = widget.content.widgets;\n\n    for (let i = 0; i < currentCellIndex; i++) {\n      if (cells[i].model.type === 'code') {\n        const content = cells[i].model.toJSON().source;\n\n        cellsContents.push(\n          Array.isArray(content) ? content.join('\\n') : content\n        );\n      }\n    }\n\n    cellsContents.push(text);\n\n    return cellsContents.join('\\n');\n  }\n\n  return text;\n}\nexport class QiskitCompletionProvider implements ICompletionProvider {\n  readonly identifier: string = 'QiskitCodeAssistant:completer';\n  readonly rank: number = 1100;\n\n  settings: ISettingRegistry.ISettings;\n  prompt_id: string = '';\n\n  constructor(options: { settings: ISettingRegistry.ISettings }) {\n    this.settings = options.settings;\n  }\n\n  async fetch(\n    request: CompletionHandler.IRequest,\n    context: ICompletionContext\n  ): Promise<CompletionHandler.ICompletionItemsReply> {\n    const text = getInputText(request.text, context.widget);\n\n    return autoComplete(text).then(results => {\n      this.prompt_id = results.prompt_id;\n      return {\n        start: request.offset,\n        end: request.offset,\n        items: results.items.map(\n          (item: string): CompletionHandler.ICompletionItem => {\n            return {\n              label: item.trim(),\n              insertText: item,\n              icon: qiskitIcon\n            };\n          }\n        )\n      };\n    });\n  }\n\n  async isApplicable(context: ICompletionContext): Promise<boolean> {\n    // Only fetch when enabled in settings\n    return this.settings.composite['enableCompleter'] as boolean;\n  }\n\n  accept() {\n    if (this.prompt_id) {\n      postModelPromptAccept(this.prompt_id);\n    }\n  }\n}\n\nexport class QiskitInlineCompletionProvider\n  implements IInlineCompletionProvider\n{\n  readonly icon: LabIcon.ILabIcon = qiskitIcon;\n  readonly identifier: string = 'qiskit-code-assistant-inline-completer';\n  readonly name: string = 'Qiskit Code Assistant';\n\n  prompt_id: string = '';\n  schema: ISettingRegistry.IProperty = {\n    default: {\n      enabled: true,\n      timeout: 10000\n    }\n  };\n\n  async fetch(\n    request: CompletionHandler.IRequest,\n    context: IInlineCompletionContext\n  ): Promise<IInlineCompletionList> {\n    if (context.triggerKind === InlineCompletionTriggerKind.Automatic) {\n      // Don't call the API when fetch is not manually triggered\n      return { items: [] };\n    }\n\n    const text = getInputText(request.text, context.widget);\n\n    return autoComplete(text).then(results => {\n      this.prompt_id = results.prompt_id;\n      return {\n        items: results.items.map((item: string): IInlineCompletionItem => {\n          return { insertText: item };\n        })\n      };\n    });\n  }\n\n  async isApplicable(context: ICompletionContext): Promise<boolean> {\n    // Always fetch, any filtering is handled by the service\n    return true;\n  }\n\n  accept() {\n    if (this.prompt_id) {\n      postModelPromptAccept(this.prompt_id);\n    }\n  }\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputDialog } from '@jupyterlab/apputils';\nimport { Message } from '@lumino/messaging';\nimport { refreshIcon } from '@jupyterlab/ui-components';\nimport { Widget } from '@lumino/widgets';\n\nimport { showDisclaimer } from './service/disclaimer';\nimport {\n  getCurrentModel,\n  getModelsList,\n  setCurrentModel\n} from './service/modelHandler';\nimport { checkAPIToken } from './service/token';\n\nexport class StatusBarWidget extends Widget {\n  static widget: StatusBarWidget;\n  private _statusBar: HTMLElement;\n\n  constructor() {\n    super();\n\n    const statusBar = document.createElement('div');\n    statusBar.title = 'Click to change the model';\n    statusBar.classList.add('jp-qiskit-code-assistant-statusbar');\n    statusBar.classList.add('jp-StatusBar-GroupItem');\n    this.addClass('jp-mod-highlighted');\n    this.node.appendChild(statusBar);\n    this._statusBar = statusBar;\n\n    this.refreshStatusBar();\n\n    StatusBarWidget.widget = this;\n  }\n\n  /**\n   * Updates the statusbar\n   */\n  refreshStatusBar(): void {\n    const curentModel = getCurrentModel();\n\n    if (curentModel) {\n      this._statusBar.innerHTML =\n        'Qiskit Code Assistant: ' + curentModel.display_name;\n      this.removeClass('jp-qiskit-code-assistant-statusbar-warn');\n    } else {\n      this._statusBar.innerHTML = 'Qiskit Code Assistant: No Model Selected';\n      this.addClass('jp-qiskit-code-assistant-statusbar-warn');\n    }\n  }\n\n  setLoadingStatus(): void {\n    this._statusBar.innerHTML = this._statusBar.innerHTML + refreshIcon.svgstr;\n  }\n\n  async onClick() {\n    await checkAPIToken().then(() => {\n      const modelsList = getModelsList();\n      InputDialog.getItem({\n        title: 'Select a Model',\n        items: [...modelsList.map(m => m.display_name)]\n      }).then(result => {\n        if (result.button.accept) {\n          const model = modelsList.find(m => m.display_name === result.value);\n\n          if (model) {\n            showDisclaimer(model._id).then(accepted => {\n              if (accepted) {\n                setCurrentModel(model);\n              }\n            });\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Callback when the widget is added to the DOM\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    this._statusBar.addEventListener('click', this.onClick.bind(this));\n  }\n\n  /**\n   * Callback when the widget is removed from the DOM\n   */\n  protected onBeforeDetach(msg: Message): void {\n    this._statusBar.removeEventListener('click', this.onClick.bind(this));\n    super.onBeforeDetach(msg);\n  }\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { ICompletionProviderManager } from '@jupyterlab/completer';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { IStatusBar } from '@jupyterlab/statusbar';\n\nimport { StatusBarWidget } from './StatusBarWidget';\nimport {\n  QiskitCompletionProvider,\n  QiskitInlineCompletionProvider\n} from './QiskitCompletionProvider';\nimport { postServiceUrl } from './service/api';\nimport { refreshModelsList } from './service/modelHandler';\nimport { updateAPIToken } from './service/token';\n\nconst EXTENSION_ID = 'qiskit-code-assistant-jupyterlab';\n\nnamespace CommandIDs {\n  export const acceptInline = 'inline-completer:accept';\n  export const selectCompleterNotebook = 'completer:select-notebook';\n  export const selectCompleterFile = 'completer:select-file';\n  export const updateApiToken = 'qiskit-code-assistant:set-api-token';\n}\n\n/**\n * Initialization data for the qiskit-code-assistant-jupyterlab extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: EXTENSION_ID + ':plugin',\n  description: 'AI Autocomplete JupyterLab extension for Qiskit Code Assistant',\n  autoStart: true,\n  requires: [\n    ICompletionProviderManager,\n    ICommandPalette,\n    ISettingRegistry,\n    IStatusBar\n  ],\n  activate: async (\n    app: JupyterFrontEnd,\n    completionProviderManager: ICompletionProviderManager,\n    palette: ICommandPalette,\n    settingRegistry: ISettingRegistry,\n    statusBar: IStatusBar\n  ) => {\n    console.debug('JupyterLab extension ' + EXTENSION_ID + ' is activated!');\n\n    const settings = await settingRegistry.load(plugin.id);\n    console.debug(EXTENSION_ID + ' settings loaded:', settings.composite);\n\n    postServiceUrl(settings.composite['serviceUrl'] as string);\n    settings.changed.connect(() =>\n      postServiceUrl(settings.composite['serviceUrl'] as string)\n    );\n\n    const provider = new QiskitCompletionProvider({ settings });\n    const inlineProvider = new QiskitInlineCompletionProvider();\n    completionProviderManager.registerProvider(provider);\n    completionProviderManager.registerInlineProvider(inlineProvider);\n\n    const statusBarWidget = new StatusBarWidget();\n    statusBar.registerStatusItem(EXTENSION_ID + ':statusbar', {\n      item: statusBarWidget,\n      align: 'left'\n    });\n\n    await refreshModelsList().catch(reason => {\n      console.error('Failed initial load of models list', reason);\n    });\n\n    app.commands.addCommand(CommandIDs.updateApiToken, {\n      label: 'Qiskit Code Assistant: Set IBM Quantum API token',\n      execute: () => updateAPIToken()\n    });\n\n    palette.addItem({\n      command: CommandIDs.updateApiToken,\n      category: 'Qiskit Code Assistant'\n    });\n\n    app.commands.commandExecuted.connect((registry, executed) => {\n      if (\n        executed.id === CommandIDs.selectCompleterFile ||\n        executed.id === CommandIDs.selectCompleterNotebook\n      ) {\n        provider.accept();\n      } else if (executed.id === CommandIDs.acceptInline) {\n        inlineProvider.accept();\n      }\n    });\n  }\n};\n\nexport default plugin;\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { requestAPI } from '../utils/handler';\nimport {\n  IModelDisclaimer,\n  IModelInfo,\n  IModelPromptResponse,\n  IResponseMessage\n} from '../utils/schema';\n\n// POST /service\nexport async function postServiceUrl(newUrl: string): Promise<void> {\n  return await requestAPI('service', {\n    method: 'POST',\n    body: JSON.stringify({ url: newUrl })\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.debug('Updated service URL:', json.url);\n      });\n    } else {\n      console.error(\n        'Error updating service URL',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// GET /token\nexport async function getAPIToken(): Promise<boolean> {\n  return await requestAPI('token').then(async response => {\n    if (response.ok) {\n      const json = await response.json();\n      return json['success'];\n    } else {\n      console.error(\n        'Error getting models',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// POST /token\nexport async function postApiToken(apiToken: string): Promise<void> {\n  return await requestAPI('token', {\n    method: 'POST',\n    body: JSON.stringify({ token: apiToken })\n  }).then(response => {\n    if (response.ok) {\n      response.json().then(json => {\n        console.debug('IBM Quantum API Token stored');\n      });\n    } else {\n      console.error(\n        'Error submitting IBM Quantum API Token',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// GET /models\nexport async function getModels(): Promise<IModelInfo[]> {\n  return await requestAPI('models').then(async response => {\n    if (response.ok) {\n      const json = await response.json();\n      console.debug('models list:', json);\n      return json['models'];\n    } else {\n      console.error(\n        'Error getting models',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// GET /model/{model_id}\nexport async function getModel(model_id: string): Promise<IModelInfo> {\n  return await requestAPI(`model/${model_id}`).then(async response => {\n    if (response.ok) {\n      const model = await response.json();\n      console.debug('model:', model);\n      return model;\n    } else {\n      console.error(\n        'Error getting model',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// GET /model/{model_id}/disclaimer\nexport async function getModelDisclaimer(\n  model_id: string\n): Promise<IModelDisclaimer> {\n  return await requestAPI(`model/${model_id}/disclaimer`).then(\n    async response => {\n      if (response.ok) {\n        return await response.json();\n      } else {\n        console.error(\n          'Error getting disclaimer',\n          response.status,\n          response.statusText\n        );\n        throw Error(response.statusText);\n      }\n    }\n  );\n}\n\n// POST /disclaimer/{disclaimer_id}/acceptance\nexport async function postDisclaimerAccept(\n  disclaimer_id: string,\n  model: string\n): Promise<IResponseMessage> {\n  return await requestAPI(`disclaimer/${disclaimer_id}/acceptance`, {\n    method: 'POST',\n    body: JSON.stringify({ model, accepted: true })\n  }).then(async response => {\n    if (response.ok) {\n      return await response.json();\n    } else {\n      console.error(\n        'Error accepting disclaimer',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// POST /model/{model_id}/prompt\nexport async function postModelPrompt(\n  model_id: string,\n  input: string\n): Promise<IModelPromptResponse> {\n  return await requestAPI(`model/${model_id}/prompt`, {\n    method: 'POST',\n    body: JSON.stringify({ input })\n  }).then(async response => {\n    if (response.ok) {\n      const promptRes = await response.json();\n      console.debug('prompt:', promptRes);\n      return promptRes;\n    } else {\n      console.error(\n        'Error sending prompt',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n\n// POST /prompt/{prompt_id}/acceptance\nexport async function postModelPromptAccept(\n  prompt_id: string\n): Promise<IResponseMessage> {\n  return await requestAPI(`prompt/${prompt_id}/acceptance`, {\n    method: 'POST',\n    body: JSON.stringify({ accepted: true })\n  }).then(async response => {\n    if (response.ok) {\n      return await response.json();\n    } else {\n      console.error(\n        'Error accepting prompt',\n        response.status,\n        response.statusText\n      );\n      throw Error(response.statusText);\n    }\n  });\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModel, postModelPrompt } from './api';\nimport { showDisclaimer } from './disclaimer';\nimport { getCurrentModel } from './modelHandler';\nimport { checkAPIToken } from './token';\nimport { StatusBarWidget } from '../StatusBarWidget';\nimport { ICompletionReturn, IModelPromptResponse } from '../utils/schema';\n\nexport const CHAR_LIMIT = 4_000;\n\nasync function promptPromise(\n  model: string,\n  requestText: string\n): Promise<ICompletionReturn> {\n  // Show loading icon in status bar\n  StatusBarWidget.widget.setLoadingStatus();\n\n  return postModelPrompt(model, requestText).then(\n    (response: IModelPromptResponse) => {\n      const items: string[] = [];\n      response.results.map(results => items.push(results.generated_text));\n      return {\n        items,\n        prompt_id: response.prompt_id\n      };\n    }\n  );\n}\n\nexport async function autoComplete(text: string): Promise<ICompletionReturn> {\n  const emptyReturn: ICompletionReturn = { items: [], prompt_id: '' };\n\n  return await checkAPIToken()\n    .then(async () => {\n      const startingOffset = Math.max(0, text.length - CHAR_LIMIT);\n      const requestText = text.slice(startingOffset, text.length);\n      const model = getCurrentModel();\n\n      return await getModel(model?._id || '')\n        .then(async model => {\n          if (model.disclaimer?.accepted) {\n            return await promptPromise(model._id, requestText);\n          } else {\n            return await showDisclaimer(model._id).then(async accepted => {\n              if (accepted) {\n                return await promptPromise(model._id, requestText);\n              } else {\n                console.error('Disclaimer not accepted');\n                return emptyReturn;\n              }\n            });\n          }\n        })\n        .catch(reason => {\n          console.error('Failed to send prompt', reason);\n          return emptyReturn;\n        });\n    })\n    .catch(reason => {\n      console.error('Failed to send prompt', reason);\n      return emptyReturn;\n    })\n    .finally(() => {\n      // Remove loading icon from status bar\n      StatusBarWidget.widget.refreshStatusBar();\n    });\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\n\nimport { getModelDisclaimer, postDisclaimerAccept } from './api';\nimport { refreshModelsList } from './modelHandler';\nimport { IResponseMessage } from '../utils/schema';\n\nexport async function showDisclaimer(model_id: string): Promise<boolean> {\n  return await getModelDisclaimer(model_id).then(async disclaimerRes => {\n    if (disclaimerRes.accepted) {\n      return disclaimerRes.accepted;\n    }\n\n    const bodyHtml = { __html: disclaimerRes.body };\n\n    return await showDialog({\n      title: disclaimerRes.title,\n      body: <div dangerouslySetInnerHTML={bodyHtml} />,\n      buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'Accept' })]\n    }).then(async (result: any) => {\n      // Do nothing if the cancel button is pressed\n      if (result.button.accept) {\n        return await postDisclaimerAccept(disclaimerRes._id, model_id).then(\n          async (res: IResponseMessage) => {\n            return await refreshModelsList().then(() => {\n              return res.success;\n            });\n          }\n        );\n      } else {\n        return false;\n      }\n    });\n  });\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModels } from './api';\nimport { StatusBarWidget } from '../StatusBarWidget';\nimport { IModelInfo } from '../utils/schema';\n\nlet modelsList: IModelInfo[] = [];\nlet currentModel: IModelInfo | undefined = undefined;\n\nexport function getModelsList(): IModelInfo[] {\n  return modelsList;\n}\n\nexport function getCurrentModel(): IModelInfo | undefined {\n  return currentModel;\n}\n\nexport function setCurrentModel(model?: IModelInfo): void {\n  currentModel = modelsList.find(m => m._id === model?._id);\n  StatusBarWidget.widget?.refreshStatusBar();\n}\n\nexport async function refreshModelsList(): Promise<void> {\n  return await getModels()\n    .then(models => {\n      modelsList = models;\n      currentModel =\n        modelsList.find(m => m._id === currentModel?._id) || models?.[0];\n      StatusBarWidget.widget?.refreshStatusBar();\n    })\n    .catch(reason => {\n      throw new Error(reason);\n    });\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dialog, InputDialog } from '@jupyterlab/apputils';\n\nimport { getAPIToken, postApiToken } from './api';\nimport { refreshModelsList } from './modelHandler';\n\nexport async function checkAPIToken(): Promise<void> {\n  const apiToken = await getAPIToken();\n  if (!apiToken) {\n    return await updateAPIToken();\n  }\n}\n\nexport async function updateAPIToken(): Promise<void> {\n  await InputDialog.getPassword({\n    title: 'Enter your API token from quantum.ibm.com',\n    label:\n      'In order to use Qiskit Code Assistant you need a IBM Quantum API Token'\n  })\n    .then(async (result: Dialog.IResult<string>) => {\n      if (result.button.accept && result.value) {\n        return await postApiToken(result.value).then(async () => {\n          try {\n            return await refreshModelsList();\n          } catch (reason) {\n            console.error('Failed to load models list', reason);\n          }\n        });\n      } else {\n        throw Error('API token not set');\n      }\n    })\n    .catch(() => {\n      throw Error('API token not set');\n    });\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the requestd\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(\n  endPoint: string = '',\n  init: RequestInit = {}\n): Promise<Response> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'qiskit-code-assistant', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    console.error(\n      'The qiskit_code_assistant_jupyterlab server extension appears to be missing.\\n',\n      error\n    );\n    throw new ServerConnection.NetworkError(error as any);\n  }\n\n  return response;\n}\n","/*\n * Copyright 2024 IBM Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LabIcon } from '@jupyterlab/ui-components';\n\nimport qiskitSvg from '../../style/icons/Qiskit.svg';\n\nexport const qiskitIcon = new LabIcon({\n  name: 'qiskit:logo',\n  svgstr: qiskitSvg\n});\n"],"names":[],"sourceRoot":""}