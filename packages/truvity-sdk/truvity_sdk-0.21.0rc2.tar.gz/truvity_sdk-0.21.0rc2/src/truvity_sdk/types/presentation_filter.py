# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .annotations import Annotations
from .filter_id import FilterId
from .filter_integer import FilterInteger
from .filter_string import FilterString
from .filter_timestamp import FilterTimestamp
from .filter_timestamp_optional import FilterTimestampOptional
from .labels import Labels
from .presentation_filter_data import PresentationFilterData
from .presentation_filter_kind import PresentationFilterKind

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class PresentationFilter(pydantic.BaseModel):
    """
    Schema for the PresentationResource filter.
    """

    annotations: typing.Optional[Annotations] = None
    created_at: typing.Optional[FilterTimestamp] = None
    data: typing.Optional[PresentationFilterData] = None
    deleted_at: typing.Optional[FilterTimestampOptional] = None
    etag: typing.Optional[FilterString] = None
    id: typing.Optional[FilterId] = None
    kind: typing.Optional[PresentationFilterKind] = None
    labels: typing.Optional[Labels] = None
    modified_at: typing.Optional[FilterTimestamp] = None
    revision: typing.Optional[FilterInteger] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
