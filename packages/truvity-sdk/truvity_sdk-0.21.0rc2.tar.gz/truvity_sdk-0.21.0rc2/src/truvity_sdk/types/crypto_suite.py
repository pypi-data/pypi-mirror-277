# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CryptoSuite(str, enum.Enum):
    """
    All possible types of cryptosuites or legacy signature suites.
    """

    ECDSA_SECP_256_K_1_SIGNATURE_2019 = "EcdsaSecp256k1Signature2019"
    ECDSA_2019_CRYPTOSUITE = "ecdsa-2019-cryptosuite"
    ECDSA_2023_CRYPTOSUITE = "ecdsa-2023-cryptosuite"
    ED_25519_SIGNATURE_2018 = "Ed25519Signature2018"
    ED_25519_SIGNATURE_2020 = "Ed25519Signature2020"
    EDDSA_2022_CRYPTOSUITE = "eddsa-2022-cryptosuite"

    def visit(
        self,
        ecdsa_secp_256_k_1_signature_2019: typing.Callable[[], T_Result],
        ecdsa_2019_cryptosuite: typing.Callable[[], T_Result],
        ecdsa_2023_cryptosuite: typing.Callable[[], T_Result],
        ed_25519_signature_2018: typing.Callable[[], T_Result],
        ed_25519_signature_2020: typing.Callable[[], T_Result],
        eddsa_2022_cryptosuite: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CryptoSuite.ECDSA_SECP_256_K_1_SIGNATURE_2019:
            return ecdsa_secp_256_k_1_signature_2019()
        if self is CryptoSuite.ECDSA_2019_CRYPTOSUITE:
            return ecdsa_2019_cryptosuite()
        if self is CryptoSuite.ECDSA_2023_CRYPTOSUITE:
            return ecdsa_2023_cryptosuite()
        if self is CryptoSuite.ED_25519_SIGNATURE_2018:
            return ed_25519_signature_2018()
        if self is CryptoSuite.ED_25519_SIGNATURE_2020:
            return ed_25519_signature_2020()
        if self is CryptoSuite.EDDSA_2022_CRYPTOSUITE:
            return eddsa_2022_cryptosuite()
