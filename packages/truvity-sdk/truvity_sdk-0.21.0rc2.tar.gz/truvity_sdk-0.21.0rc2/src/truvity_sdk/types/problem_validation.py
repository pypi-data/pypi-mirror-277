# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .http_request_part import HttpRequestPart
from .uri_reference import UriReference
from .validation_error import ValidationError

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class ProblemValidation(pydantic.BaseModel):
    """
    A defined validation problem according to [RFC 9457](https://www.rfc-editor.org/rfc/rfc9457.html).
    Additional information:
    type: /bad-request/validation
    status: 400
    title: Bad Request
    .
    """

    status: int = pydantic.Field()
    """
    The HTTP system code generated by the origin server for this occurrence of the problem.
    """

    title: str = pydantic.Field()
    """
    A short, human-readable summary of the problem type.
    """

    request: HttpRequestPart
    schema_: UriReference = pydantic.Field(alias="schema")
    errors: typing.List[ValidationError]
    detail: typing.Optional[str] = pydantic.Field(default=None)
    """
    A human-readable explanation specific to this occurrence of the problem.
    """

    instance: typing.Optional[str] = pydantic.Field(default=None)
    """
    A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
