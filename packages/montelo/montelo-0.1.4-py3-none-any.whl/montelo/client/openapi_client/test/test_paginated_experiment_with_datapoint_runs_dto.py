# coding: utf-8

"""
    Montelo

    Documentation for the Montelo API.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from montelo.client.openapi_client.models.paginated_experiment_with_datapoint_runs_dto import PaginatedExperimentWithDatapointRunsDto

class TestPaginatedExperimentWithDatapointRunsDto(unittest.TestCase):
    """PaginatedExperimentWithDatapointRunsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedExperimentWithDatapointRunsDto:
        """Test PaginatedExperimentWithDatapointRunsDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedExperimentWithDatapointRunsDto`
        """
        model = PaginatedExperimentWithDatapointRunsDto()
        if include_optional:
            return PaginatedExperimentWithDatapointRunsDto(
                experiment = openapi_client.models.experiment_with_datapoint_runs_dto.ExperimentWithDatapointRunsDto(
                    id = '', 
                    dataset_id = '', 
                    name = '', 
                    description = '', 
                    created_at = '', 
                    dataset = openapi_client.models.dataset_dto.DatasetDto(
                        id = '', 
                        env_id = '', 
                        name = '', 
                        description = '', 
                        is_generating = True, ), 
                    datapoint_runs = [
                        openapi_client.models.full_datapoint_run_dto.FullDatapointRunDto(
                            id = '', 
                            output = openapi_client.models.output.output(), 
                            evaluation = openapi_client.models.evaluation.evaluation(), 
                            experiment_id = '', 
                            datapoint_id = '', 
                            created_at = '', 
                            datapoint = openapi_client.models.datapoint_dto.DatapointDto(
                                id = '', 
                                input = openapi_client.models.input.input(), 
                                expected_output = openapi_client.models.expected_output.expectedOutput(), 
                                dataset_id = '', 
                                split = 'TRAIN', 
                                created_at = '', 
                                metadata = openapi_client.models.metadata.metadata(), ), )
                        ], ),
                total_datapoint_runs = 1.337
            )
        else:
            return PaginatedExperimentWithDatapointRunsDto(
                experiment = openapi_client.models.experiment_with_datapoint_runs_dto.ExperimentWithDatapointRunsDto(
                    id = '', 
                    dataset_id = '', 
                    name = '', 
                    description = '', 
                    created_at = '', 
                    dataset = openapi_client.models.dataset_dto.DatasetDto(
                        id = '', 
                        env_id = '', 
                        name = '', 
                        description = '', 
                        is_generating = True, ), 
                    datapoint_runs = [
                        openapi_client.models.full_datapoint_run_dto.FullDatapointRunDto(
                            id = '', 
                            output = openapi_client.models.output.output(), 
                            evaluation = openapi_client.models.evaluation.evaluation(), 
                            experiment_id = '', 
                            datapoint_id = '', 
                            created_at = '', 
                            datapoint = openapi_client.models.datapoint_dto.DatapointDto(
                                id = '', 
                                input = openapi_client.models.input.input(), 
                                expected_output = openapi_client.models.expected_output.expectedOutput(), 
                                dataset_id = '', 
                                split = 'TRAIN', 
                                created_at = '', 
                                metadata = openapi_client.models.metadata.metadata(), ), )
                        ], ),
                total_datapoint_runs = 1.337,
        )
        """

    def testPaginatedExperimentWithDatapointRunsDto(self):
        """Test PaginatedExperimentWithDatapointRunsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
