# coding: utf-8

"""
    Montelo

    Documentation for the Montelo API.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from montelo.client.openapi_client.models.paginated_experiment_with_datapoints_dto import PaginatedExperimentWithDatapointsDto

class TestPaginatedExperimentWithDatapointsDto(unittest.TestCase):
    """PaginatedExperimentWithDatapointsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedExperimentWithDatapointsDto:
        """Test PaginatedExperimentWithDatapointsDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedExperimentWithDatapointsDto`
        """
        model = PaginatedExperimentWithDatapointsDto()
        if include_optional:
            return PaginatedExperimentWithDatapointsDto(
                experiment = openapi_client.models.experiment_with_datapoints_dto.ExperimentWithDatapointsDto(
                    id = '', 
                    dataset_id = '', 
                    name = '', 
                    description = '', 
                    created_at = '', 
                    dataset = openapi_client.models.full_dataset_dto.FullDatasetDto(
                        id = '', 
                        env_id = '', 
                        name = '', 
                        description = '', 
                        is_generating = True, 
                        datapoints = [
                            openapi_client.models.datapoint_dto.DatapointDto(
                                id = '', 
                                input = openapi_client.models.input.input(), 
                                expected_output = openapi_client.models.expected_output.expectedOutput(), 
                                dataset_id = '', 
                                split = 'TRAIN', 
                                created_at = '', 
                                metadata = openapi_client.models.metadata.metadata(), )
                            ], ), ),
                total_datapoints = 1.337
            )
        else:
            return PaginatedExperimentWithDatapointsDto(
                experiment = openapi_client.models.experiment_with_datapoints_dto.ExperimentWithDatapointsDto(
                    id = '', 
                    dataset_id = '', 
                    name = '', 
                    description = '', 
                    created_at = '', 
                    dataset = openapi_client.models.full_dataset_dto.FullDatasetDto(
                        id = '', 
                        env_id = '', 
                        name = '', 
                        description = '', 
                        is_generating = True, 
                        datapoints = [
                            openapi_client.models.datapoint_dto.DatapointDto(
                                id = '', 
                                input = openapi_client.models.input.input(), 
                                expected_output = openapi_client.models.expected_output.expectedOutput(), 
                                dataset_id = '', 
                                split = 'TRAIN', 
                                created_at = '', 
                                metadata = openapi_client.models.metadata.metadata(), )
                            ], ), ),
                total_datapoints = 1.337,
        )
        """

    def testPaginatedExperimentWithDatapointsDto(self):
        """Test PaginatedExperimentWithDatapointsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
